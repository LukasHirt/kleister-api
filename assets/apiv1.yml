swagger: "2.0"

info:
  description: "API definition for Kleister, manage mod packs for Minecraft"
  title: "Kleister OpenAPI"
  version: "1.0.0"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

consumes:
  - "application/json"

produces:
  - "application/json"

schemes:
  - "http"
  - "https"

basePath: "/api/v1"

paths:
  /auth/verify/{token}:
    get:
      summary: "Verify validity for an authentication token"
      operationId: "AuthVerify"
      tags:
        - "auth"
      parameters:
        - in: "path"
          name: "token"
          description: "A token that have to be checked"
          type: "string"
          required: true
      responses:
        200:
          description: "Meta data of the provided token"
          schema:
            $ref: "#/definitions/auth_verify"
        401:
          description: "Unauthorized if token is invalid"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /auth/refresh:
    get:
      summary: "Refresh an auth token before it expires"
      operationId: "AuthRefresh"
      tags:
        - "auth"
      responses:
        200:
          description: "A refreshed token with expire"
          schema:
            $ref: "#/definitions/auth_token"
        401:
          description: "Unauthorized if failed to generate"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /auth/login:
    post:
      summary: "Authenticate an user by credentials"
      operationId: "AuthLogin"
      tags:
        - "auth"
      parameters:
        - in: "body"
          name: "params"
          description: "The credentials to authenticate"
          required: true
          schema:
            type: "object"
            required:
              - "username"
              - "password"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "A generated token with expire"
          schema:
            $ref: "#/definitions/auth_token"
        401:
          description: "Unauthorized if wrong credentials"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /profile/token:
    get:
      summary: "Retrieve an unlimited auth token"
      operationId: "ProfileToken"
      tags:
        - "profile"
      responses:
        200:
          description: "The unlimited auth token"
          schema:
            $ref: "#/definitions/auth_token"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        500:
          description: "Failed to generate a token"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /profile/self:
    get:
      summary: "Retrieve an unlimited auth token"
      operationId: "ProfileShow"
      tags:
        - profile
      responses:
        200:
          description: "The current profile data"
          schema:
            $ref: "#/definitions/profile"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Retrieve an unlimited auth token"
      operationId: "ProfileUpdate"
      tags:
        - "profile"
      parameters:
        - in: "body"
          name: "params"
          description: "The profile data to update"
          required: true
          schema:
            $ref: "#/definitions/profile"
      responses:
        200:
          description: "The updated profile data"
          schema:
            $ref: "#/definitions/profile"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /minecraft:
    get:
      summary: "Fetch the available Minecraft versions"
      operationId: "MinecraftIndex"
      tags:
        - "minecraft"
      responses:
        200:
          description: "A collection of Minecraft versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/minecraft"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update the available Minecraft versions"
      operationId: "MinecraftUpdate"
      tags:
        - "minecraft"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        503:
          description: "If remote source is not available"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /minecraft/{minecraftID}:
    get:
      summary: "Search for available Minecraft versions"
      operationId: "MinecraftSearch"
      tags:
        - "minecraft"
      parameters:
        - in: "path"
          name: "minecraftID"
          description: "A search token to search Minecraft versions"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of Minecraft versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/minecraft"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /minecraft/{minecraftID}/builds:
    get:
      summary: "Fetch the builds assigned to a Minecraft version"
      operationId: "MinecraftBuildIndex"
      tags:
        - "minecraft"
      parameters:
        - in: "path"
          name: "minecraftID"
          description: "A minecraft UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a build to a Minecraft version"
      operationId: "MinecraftBuildAppend"
      tags:
        - "minecraft"
      parameters:
        - in: "path"
          name: "minecraftID"
          description: "A minecraft UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to append"
          required: true
          schema:
            $ref: "#/definitions/minecraft_build_params"
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Build is already appended"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Unlink a build from a Minecraft version"
      operationId: "MinecraftBuildDelete"
      tags:
        - "minecraft"
      parameters:
        - in: "path"
          name: "minecraftID"
          description: "A minecraft UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to unlink"
          required: true
          schema:
            $ref: "#/definitions/minecraft_build_params"
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Build is not assigned"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /forge:
    get:
      summary: "Fetch the available Forge versions"
      operationId: "ForgeIndex"
      tags:
        - "forge"
      responses:
        200:
          description: "A collection of Forge versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/forge"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update the available Forge versions"
      operationId: "ForgeUpdate"
      tags:
        - "forge"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        503:
          description: "If remote source is not available"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /forge/{forgeID}:
    get:
      summary: "Search for available Forge versions"
      operationId: "ForgeSearch"
      tags:
        - "forge"
      parameters:
        - in: "path"
          name: "forgeID"
          description: "A search token to search Forge versions"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of Forge versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/forge"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /forge/{forgeID}/builds:
    get:
      summary: "Fetch the builds assigned to a Forge version"
      operationId: "ForgeBuildIndex"
      tags:
        - "forge"
      parameters:
        - in: "path"
          name: "forgeID"
          description: "A forge UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a build to a Forge version"
      operationId: "ForgeBuildAppend"
      tags:
        - "forge"
      parameters:
        - in: "path"
          name: "forgeID"
          description: "A forge UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to append"
          required: true
          schema:
            $ref: "#/definitions/forge_build_params"
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Build is already appended"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Unlink a build from a Forge version"
      operationId: "ForgeBuildDelete"
      tags:
        - "forge"
      parameters:
        - in: "path"
          name: "forgeID"
          description: "A forge UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to unlink"
          required: true
          schema:
            $ref: "#/definitions/forge_build_params"
      responses:
        200:
          description: "A collection of assigned builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Build is not assigned"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs:
    get:
      summary: "Fetch all available packs"
      operationId: "PackIndex"
      tags:
        - "pack"
      responses:
        200:
          description: "A collection of packs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new pack"
      operationId: "PackCreate"
      tags:
        - "pack"
      parameters:
        - in: "body"
          name: "params"
          description: "The pack data to create"
          required: true
          schema:
            $ref: "#/definitions/pack"
      responses:
        200:
          description: "The created pack data"
          schema:
            $ref: "#/definitions/pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}:
    get:
      summary: "Fetch a specific pack"
      operationId: "PackShow"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched pack details"
          schema:
            $ref: "#/definitions/pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific pack"
      operationId: "PackUpdate"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack data to update"
          required: true
          schema:
            $ref: "#/definitions/pack"
      responses:
        200:
          description: "The updated pack details"
          schema:
            $ref: "#/definitions/pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific pack"
      operationId: "PackDelete"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the pack"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}/users:
    get:
      summary: "Fetch all users assigned to pack"
      operationId: "PackUserIndex"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of pack users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user_pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a user to pack"
      operationId: "PackUserAppend"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack user data to assign"
          required: true
          schema:
            $ref: "#/definitions/pack_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update user perms for pack"
      operationId: "PackUserPerm"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack user data to update"
          required: true
          schema:
            $ref: "#/definitions/pack_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a user from pack"
      operationId: "PackUserDelete"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack user data to delete"
          required: true
          schema:
            $ref: "#/definitions/pack_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}/teams:
    get:
      summary: "Fetch all teams assigned to pack"
      operationId: "PackTeamIndex"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of pack teams"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a team to pack"
      operationId: "PackTeamAppend"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack team data to assign"
          required: true
          schema:
            $ref: "#/definitions/pack_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update team perms for pack"
      operationId: "PackTeamPerm"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack team data to update"
          required: true
          schema:
            $ref: "#/definitions/pack_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a team from pack"
      operationId: "PackTeamDelete"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The pack team data to delete"
          required: true
          schema:
            $ref: "#/definitions/pack_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}/builds:
    get:
      summary: "Fetch all available builds for a pack"
      operationId: "BuildIndex"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new build for a pack"
      operationId: "BuildCreate"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to create"
          required: true
          schema:
            $ref: "#/definitions/build"
      responses:
        200:
          description: "The created build data"
          schema:
            $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}/builds/{buildID}:
    get:
      summary: "Fetch a specific build for a pack"
      operationId: "BuildShow"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched build details"
          schema:
            $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific build for a pack"
      operationId: "BuildUpdate"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to update"
          required: true
          schema:
            $ref: "#/definitions/build"
      responses:
        200:
          description: "The updated build details"
          schema:
            $ref: "#/definitions/build"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific build for a pack"
      operationId: "BuildDelete"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the build"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /packs/{packID}/builds/{buildID}/versions:
    get:
      summary: "Fetch all versions assigned to build"
      operationId: "BuildVersionIndex"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of build versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build_version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a version to a build"
      operationId: "BuildVersionAppend"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The version data to append to build"
          required: true
          schema:
            $ref: "#/definitions/build_version_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Version is already appended"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Unlink a version from a build"
      operationId: "BuildVersionDelete"
      tags:
        - "pack"
      parameters:
        - in: "path"
          name: "packID"
          description: "A pack UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "buildID"
          description: "A build UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The version data to unlink from build"
          required: true
          schema:
            $ref: "#/definitions/build_version_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to unlink version"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods:
    get:
      summary: "Fetch all available mods"
      operationId: "ModIndex"
      tags:
        - "mod"
      responses:
        200:
          description: "A collection of mods"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new mod"
      operationId: "ModCreate"
      tags:
        - "mod"
      parameters:
        - in: "body"
          name: "params"
          description: "The mod data to create"
          required: true
          schema:
            $ref: "#/definitions/mod"
      responses:
        200:
          description: "The created mod data"
          schema:
            $ref: "#/definitions/mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}:
    get:
      summary: "Fetch a specific mod"
      operationId: "ModShow"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched mod details"
          schema:
            $ref: "#/definitions/mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific mod"
      operationId: "ModUpdate"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod data to update"
          required: true
          schema:
            $ref: "#/definitions/mod"
      responses:
        200:
          description: "The updated mod details"
          schema:
            $ref: "#/definitions/mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific mod"
      operationId: "ModDelete"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the mod"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}/users:
    get:
      summary: "Fetch all users assigned to mod"
      operationId: "ModUserIndex"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of mod users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user_mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a user to mod"
      operationId: "ModUserAppend"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod user data to assign"
          required: true
          schema:
            $ref: "#/definitions/mod_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update user perms for mod"
      operationId: "ModUserPerm"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod user data to update"
          required: true
          schema:
            $ref: "#/definitions/mod_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a user from mod"
      operationId: "ModUserDelete"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod user data to delete"
          required: true
          schema:
            $ref: "#/definitions/mod_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}/teams:
    get:
      summary: "Fetch all teams assigned to mod"
      operationId: "ModTeamIndex"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of mod teams"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a team to mod"
      operationId: "ModTeamAppend"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod team data to assign"
          required: true
          schema:
            $ref: "#/definitions/mod_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update team perms for mod"
      operationId: "ModTeamPerm"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod team data to update"
          required: true
          schema:
            $ref: "#/definitions/mod_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a team from mod"
      operationId: "ModTeamDelete"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The mod team data to delete"
          required: true
          schema:
            $ref: "#/definitions/mod_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}/versions:
    get:
      summary: "Fetch all available versions for a mod"
      operationId: "VersionIndex"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new version for a mod"
      operationId: "VersionCreate"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The version data to create"
          required: true
          schema:
            $ref: "#/definitions/version"
      responses:
        200:
          description: "The created version data"
          schema:
            $ref: "#/definitions/version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}/versions/{versionID}:
    get:
      summary: "Fetch a specific version for a mod"
      operationId: "VersionShow"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched version details"
          schema:
            $ref: "#/definitions/version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific version for a mod"
      operationId: "VersionUpdate"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The version data to update"
          required: true
          schema:
            $ref: "#/definitions/version"
      responses:
        200:
          description: "The updated version details"
          schema:
            $ref: "#/definitions/version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific version for a mod"
      operationId: "VersionDelete"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the version"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /mods/{modID}/versions/{versionID}/builds:
    get:
      summary: "Fetch all builds assigned to version"
      operationId: "VersionBuildIndex"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of version builds"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/build_version"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a build to a version"
      operationId: "VersionBuildAppend"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to append to version"
          required: true
          schema:
            $ref: "#/definitions/version_build_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Build is already appended"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Unlink a build from a version"
      operationId: "VersionBuildDelete"
      tags:
        - "mod"
      parameters:
        - in: "path"
          name: "modID"
          description: "A mod UUID or slug"
          type: "string"
          required: true
        - in: "path"
          name: "versionID"
          description: "A version UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The build data to unlink from version"
          required: true
          schema:
            $ref: "#/definitions/version_build_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to unlink build"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /teams:
    get:
      summary: "Fetch all available teams"
      operationId: "TeamIndex"
      tags:
        - "team"
      responses:
        200:
          description: "A collection of teams"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new team"
      operationId: "TeamCreate"
      tags:
        - "team"
      parameters:
        - in: "body"
          name: "params"
          description: "The team data to create"
          required: true
          schema:
            $ref: "#/definitions/team"
      responses:
        200:
          description: "The created team data"
          schema:
            $ref: "#/definitions/team"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /teams/{teamID}:
    get:
      summary: "Fetch a specific team"
      operationId: "TeamShow"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched team details"
          schema:
            $ref: "#/definitions/team"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific team"
      operationId: "TeamUpdate"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team data to update"
          required: true
          schema:
            $ref: "#/definitions/team"
      responses:
        200:
          description: "The updated team details"
          schema:
            $ref: "#/definitions/team"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific team"
      operationId: "TeamDelete"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the team"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /teams/{teamID}/users:
    get:
      summary: "Fetch all users assigned to team"
      operationId: "TeamUserIndex"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of team users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a user to team"
      operationId: "TeamUserAppend"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team user data to assign"
          required: true
          schema:
            $ref: "#/definitions/team_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update user perms for team"
      operationId: "TeamUserPerm"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team user data to update"
          required: true
          schema:
            $ref: "#/definitions/team_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a user from team"
      operationId: "TeamUserDelete"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team user data to delete"
          required: true
          schema:
            $ref: "#/definitions/team_user_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "User is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /teams/{teamID}/packs:
    get:
      summary: "Fetch all packs assigned to team"
      operationId: "TeamPackIndex"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of team packs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a pack to team"
      operationId: "TeamPackAppend"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team pack data to assign"
          required: true
          schema:
            $ref: "#/definitions/team_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update pack perms for team"
      operationId: "TeamPackPerm"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team pack data to update"
          required: true
          schema:
            $ref: "#/definitions/team_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a pack from team"
      operationId: "TeamPackDelete"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team pack data to delete"
          required: true
          schema:
            $ref: "#/definitions/team_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /teams/{teamID}/mods:
    get:
      summary: "Fetch all mods assigned to team"
      operationId: "TeamModIndex"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of team mods"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a mod to team"
      operationId: "TeamModAppend"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team mod data to assign"
          required: true
          schema:
            $ref: "#/definitions/team_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update mod perms for team"
      operationId: "TeamModPerm"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team mod data to update"
          required: true
          schema:
            $ref: "#/definitions/team_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a mod from team"
      operationId: "TeamModDelete"
      tags:
        - "team"
      parameters:
        - in: "path"
          name: "teamID"
          description: "A team UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The team mod data to delete"
          required: true
          schema:
            $ref: "#/definitions/team_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /users:
    get:
      summary: "Fetch all available users"
      operationId: "UserIndex"
      tags:
        - "user"
      responses:
        200:
          description: "A collection of users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Create a new user"
      operationId: "UserCreate"
      tags:
        - "user"
      parameters:
        - in: "body"
          name: "params"
          description: "The user data to create"
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        200:
          description: "The created user data"
          schema:
            $ref: "#/definitions/user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /users/{userID}:
    get:
      summary: "Fetch a specific user"
      operationId: "UserShow"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "The fetched user details"
          schema:
            $ref: "#/definitions/user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update a specific user"
      operationId: "UserUpdate"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user data to update"
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        200:
          description: "The updated user details"
          schema:
            $ref: "#/definitions/user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Failed to validate request"
          schema:
            $ref: "#/definitions/validation_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Delete a specific user"
      operationId: "UserDelete"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        400:
          description: "Failed to delete the user"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /users/{userID}/teams:
    get:
      summary: "Fetch all teams assigned to user"
      operationId: "UserTeamIndex"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of user teams"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/team_user"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a team to user"
      operationId: "UserTeamAppend"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user team data to assign"
          required: true
          schema:
            $ref: "#/definitions/user_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update team perms for user"
      operationId: "UserTeamPerm"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user team data to update"
          required: true
          schema:
            $ref: "#/definitions/user_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a team from user"
      operationId: "UserTeamDelete"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user team data to delete"
          required: true
          schema:
            $ref: "#/definitions/user_team_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Team is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /users/{userID}/mods:
    get:
      summary: "Fetch all mods assigned to user"
      operationId: "UserModIndex"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of user mods"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user_mod"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a mod to user"
      operationId: "UserModAppend"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user mod data to assign"
          required: true
          schema:
            $ref: "#/definitions/user_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update mod perms for user"
      operationId: "UserModPerm"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user mod data to update"
          required: true
          schema:
            $ref: "#/definitions/user_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a mod from user"
      operationId: "UserModDelete"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user mod data to delete"
          required: true
          schema:
            $ref: "#/definitions/user_mod_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Mod is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

  /users/{userID}/packs:
    get:
      summary: "Fetch all packs assigned to user"
      operationId: "UserPackIndex"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
      responses:
        200:
          description: "A collection of team packs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/user_pack"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    post:
      summary: "Assign a pack to user"
      operationId: "UserPackAppend"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user pack data to assign"
          required: true
          schema:
            $ref: "#/definitions/user_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is already assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    put:
      summary: "Update pack perms for user"
      operationId: "UserPackPerm"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user pack data to update"
          required: true
          schema:
            $ref: "#/definitions/user_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

    delete:
      summary: "Remove a pack from user"
      operationId: "UserPackDelete"
      tags:
        - "user"
      parameters:
        - in: "path"
          name: "userID"
          description: "A user UUID or slug"
          type: "string"
          required: true
        - in: "body"
          name: "params"
          description: "The user pack data to delete"
          required: true
          schema:
            $ref: "#/definitions/user_pack_params"
      responses:
        200:
          description: "Plain success message"
          schema:
            $ref: "#/definitions/general_error"
        403:
          description: "User is not authorized"
          schema:
            $ref: "#/definitions/general_error"
        412:
          description: "Failed to parse request body"
          schema:
            $ref: "#/definitions/general_error"
        422:
          description: "Pack is not assigned"
          schema:
            $ref: "#/definitions/general_error"
        default:
          description: "Some error unrelated to the handler"
          schema:
            $ref: "#/definitions/general_error"

definitions:
  auth_verify:
    type: "object"
    required:
      - "username"
      - "created_at"
    properties:
      username:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"

  auth_token:
    type: "object"
    required:
      - "token"
      - "expires_at"
    properties:
      token:
        type: "string"
      expires_at:
        type: "string"
        format: "date-time"

  profile:
    type: "object"
    required:
      - "username"
      - "email"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      username:
        type: "string"
      email:
        type: "string"
      admin:
        type: "boolean"
      active:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  minecraft:
    type: "object"
    required:
      - "name"
      - "type"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  forge:
    type: "object"
    required:
      - "name"
      - "minecraft"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      name:
        type: "string"
      minecraft:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  mod:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      name:
        type: "string"
      side:
        type: "string"
      description:
        type: "string"
      author:
        type: "string"
      website:
        type: "string"
      donate:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  version:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      mod_id:
        type: "string"
        format: "uuid"
      # mod:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/mod"
      #   readonly: true
      slug:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  pack:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      recommended_id:
        type: "string"
        format: "uuid"
      # recommended:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/build"
      latest_id:
        type: "string"
        format: "uuid"
      # latest:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/build"
      slug:
        type: "string"
      name:
        type: "string"
      website:
        type: "string"
      published:
        type: "boolean"
      hidden:
        type: "boolean"
      private:
        type: "boolean"
      public:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  build:
    type: "object"
    required:
      - "pack_id"
      - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      pack_id:
        type: "string"
        format: "uuid"
      # pack:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/pack"
      #   readonly: true
      minecraft_id:
        type: "string"
        format: "uuid"
      # minecraft:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/minecraft"
      #   readonly: true
      forge_id:
        type: "string"
        format: "uuid"
      # forge:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/forge"
      #   readonly: true
      slug:
        type: "string"
      name:
        type: "string"
      min_java:
        type: "string"
      min_memory:
        type: "string"
      published:
        type: "boolean"
      hidden:
        type: "boolean"
      private:
        type: "boolean"
      public:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  team:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  team_pack:
    type: "object"
    required:
      - "team_id"
      - "pack_id"
      - "perm"
    properties:
      team_id:
        type: "string"
        format: "uuid"
      # team:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/team"
      pack_id:
        type: "string"
        format: "uuid"
      # pack:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/pack"
      perm:
        type: "string"

  team_mod:
    type: "object"
    required:
      - "team_id"
      - "mod_id"
      - "perm"
    properties:
      team_id:
        type: "string"
        format: "uuid"
      # team:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/team"
      mod_id:
        type: "string"
        format: "uuid"
      # mod:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/mod"
      perm:
        type: "string"

  team_user:
    type: "object"
    required:
      - "team_id"
      - "user_id"
      - "perm"
    properties:
      team_id:
        type: "string"
        format: "uuid"
      # team:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/team"
      user_id:
        type: "string"
        format: "uuid"
      # user:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/user"
      perm:
        type: "string"

  user:
    type: "object"
    required:
      - "username"
      - "email"
    properties:
      id:
        type: "string"
        format: "uuid"
        readOnly: true
      slug:
        type: "string"
      username:
        type: "string"
      email:
        type: "string"
      admin:
        type: "boolean"
      active:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"

  user_pack:
    type: "object"
    required:
      - "user_id"
      - "pack_id"
      - "perm"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      # user:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/user"
      pack_id:
        type: "string"
        format: "uuid"
      # pack:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/pack"
      perm:
        type: "string"

  user_mod:
    type: "object"
    required:
      - "user_id"
      - "mod_id"
      - "perm"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      # user:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/user"
      mod_id:
        type: "string"
        format: "uuid"
      # mod:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/mod"
      perm:
        type: "string"

  build_version:
    type: "object"
    required:
      - "build_id"
      - "version_id"
    properties:
      build_id:
        type: "string"
        format: "uuid"
      # build:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/build"
      version_id:
        type: "string"
        format: "uuid"
      # version:
      #   type: "object"
      #   schema:
      #     $ref: "#/definitions/version"

  mod_user_params:
    type: "object"
    required:
      - "mod"
      - "user"
      - "perm"
    properties:
      mod:
        type: "string"
      user:
        type: "string"
      perm:
        type: "string"

  mod_team_params:
    type: "object"
    required:
      - "mod"
      - "team"
      - "perm"
    properties:
      mod:
        type: "string"
      team:
        type: "string"
      perm:
        type: "string"

  pack_user_params:
    type: "object"
    required:
      - "pack"
      - "user"
      - "perm"
    properties:
      pack:
        type: "string"
      user:
        type: "string"
      perm:
        type: "string"

  pack_team_params:
    type: "object"
    required:
      - "pack"
      - "team"
      - "perm"
    properties:
      pack:
        type: "string"
      team:
        type: "string"
      perm:
        type: "string"

  team_user_params:
    type: "object"
    required:
      - "team"
      - "user"
      - "perm"
    properties:
      team:
        type: "string"
      user:
        type: "string"
      perm:
        type: "string"

  team_pack_params:
    type: "object"
    required:
      - "team"
      - "pack"
      - "perm"
    properties:
      team:
        type: "string"
      pack:
        type: "string"
      perm:
        type: "string"

  team_mod_params:
    type: "object"
    required:
      - "team"
      - "mod"
      - "perm"
    properties:
      team:
        type: "string"
      mod:
        type: "string"
      perm:
        type: "string"

  user_team_params:
    type: "object"
    required:
      - "user"
      - "team"
      - "perm"
    properties:
      user:
        type: "string"
      team:
        type: "string"
      perm:
        type: "string"

  user_mod_params:
    type: "object"
    required:
      - "user"
      - "mod"
      - "perm"
    properties:
      user:
        type: "string"
      mod:
        type: "string"
      perm:
        type: "string"

  user_pack_params:
    type: "object"
    required:
      - "user"
      - "pack"
      - "perm"
    properties:
      user:
        type: "string"
      pack:
        type: "string"
      perm:
        type: "string"

  minecraft_build_params:
    type: "object"
    required:
      - "minecraft"
      - "pack"
      - "build"
    properties:
      minecraft:
        type: "string"
      pack:
        type: "string"
      build:
        type: "string"

  forge_build_params:
    type: "object"
    required:
      - "forge"
      - "pack"
      - "build"
    properties:
      forge:
        type: "string"
      pack:
        type: "string"
      build:
        type: "string"

  build_version_params:
    type: "object"
    required:
      - "pack"
      - "build"
      - "mod"
      - "version"
    properties:
      pack:
        type: "string"
      build:
        type: "string"
      mod:
        type: "string"
      version:
        type: "string"

  version_build_params:
    type: "object"
    required:
      - "mod"
      - "version"
      - "pack"
      - "build"
    properties:
      mod:
        type: "string"
      version:
        type: "string"
      pack:
        type: "string"
      build:
        type: "string"

  general_error:
    type: "object"
    required:
      - "status"
      - "message"
    properties:
      status:
        type: "integer"
      message:
        type: "string"

  validation_error:
    type: "object"
    required:
      - "status"
      - "message"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      errors:
        type: "array"
        items:
          type: "object"
          properties:
            field:
              type: "string"
            message:
              type: "string"
