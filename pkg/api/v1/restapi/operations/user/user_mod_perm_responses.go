// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// UserModPermOKCode is the HTTP code returned for type UserModPermOK
const UserModPermOKCode int = 200

/*UserModPermOK Plain success message

swagger:response userModPermOK
*/
type UserModPermOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserModPermOK creates UserModPermOK with default headers values
func NewUserModPermOK() *UserModPermOK {

	return &UserModPermOK{}
}

// WithPayload adds the payload to the user mod perm o k response
func (o *UserModPermOK) WithPayload(payload *models.GeneralError) *UserModPermOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user mod perm o k response
func (o *UserModPermOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserModPermOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserModPermForbiddenCode is the HTTP code returned for type UserModPermForbidden
const UserModPermForbiddenCode int = 403

/*UserModPermForbidden User is not authorized

swagger:response userModPermForbidden
*/
type UserModPermForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserModPermForbidden creates UserModPermForbidden with default headers values
func NewUserModPermForbidden() *UserModPermForbidden {

	return &UserModPermForbidden{}
}

// WithPayload adds the payload to the user mod perm forbidden response
func (o *UserModPermForbidden) WithPayload(payload *models.GeneralError) *UserModPermForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user mod perm forbidden response
func (o *UserModPermForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserModPermForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserModPermPreconditionFailedCode is the HTTP code returned for type UserModPermPreconditionFailed
const UserModPermPreconditionFailedCode int = 412

/*UserModPermPreconditionFailed Failed to parse request body

swagger:response userModPermPreconditionFailed
*/
type UserModPermPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserModPermPreconditionFailed creates UserModPermPreconditionFailed with default headers values
func NewUserModPermPreconditionFailed() *UserModPermPreconditionFailed {

	return &UserModPermPreconditionFailed{}
}

// WithPayload adds the payload to the user mod perm precondition failed response
func (o *UserModPermPreconditionFailed) WithPayload(payload *models.GeneralError) *UserModPermPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user mod perm precondition failed response
func (o *UserModPermPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserModPermPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserModPermUnprocessableEntityCode is the HTTP code returned for type UserModPermUnprocessableEntity
const UserModPermUnprocessableEntityCode int = 422

/*UserModPermUnprocessableEntity Mod is not assigned

swagger:response userModPermUnprocessableEntity
*/
type UserModPermUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserModPermUnprocessableEntity creates UserModPermUnprocessableEntity with default headers values
func NewUserModPermUnprocessableEntity() *UserModPermUnprocessableEntity {

	return &UserModPermUnprocessableEntity{}
}

// WithPayload adds the payload to the user mod perm unprocessable entity response
func (o *UserModPermUnprocessableEntity) WithPayload(payload *models.GeneralError) *UserModPermUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user mod perm unprocessable entity response
func (o *UserModPermUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserModPermUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserModPermDefault Some error unrelated to the handler

swagger:response userModPermDefault
*/
type UserModPermDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserModPermDefault creates UserModPermDefault with default headers values
func NewUserModPermDefault(code int) *UserModPermDefault {
	if code <= 0 {
		code = 500
	}

	return &UserModPermDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user mod perm default response
func (o *UserModPermDefault) WithStatusCode(code int) *UserModPermDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user mod perm default response
func (o *UserModPermDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user mod perm default response
func (o *UserModPermDefault) WithPayload(payload *models.GeneralError) *UserModPermDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user mod perm default response
func (o *UserModPermDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserModPermDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
