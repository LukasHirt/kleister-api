// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// VersionUpdateOKCode is the HTTP code returned for type VersionUpdateOK
const VersionUpdateOKCode int = 200

/*VersionUpdateOK The updated version details

swagger:response versionUpdateOK
*/
type VersionUpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Version `json:"body,omitempty"`
}

// NewVersionUpdateOK creates VersionUpdateOK with default headers values
func NewVersionUpdateOK() *VersionUpdateOK {

	return &VersionUpdateOK{}
}

// WithPayload adds the payload to the version update o k response
func (o *VersionUpdateOK) WithPayload(payload *models.Version) *VersionUpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version update o k response
func (o *VersionUpdateOK) SetPayload(payload *models.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VersionUpdateForbiddenCode is the HTTP code returned for type VersionUpdateForbidden
const VersionUpdateForbiddenCode int = 403

/*VersionUpdateForbidden User is not authorized

swagger:response versionUpdateForbidden
*/
type VersionUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewVersionUpdateForbidden creates VersionUpdateForbidden with default headers values
func NewVersionUpdateForbidden() *VersionUpdateForbidden {

	return &VersionUpdateForbidden{}
}

// WithPayload adds the payload to the version update forbidden response
func (o *VersionUpdateForbidden) WithPayload(payload *models.GeneralError) *VersionUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version update forbidden response
func (o *VersionUpdateForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VersionUpdatePreconditionFailedCode is the HTTP code returned for type VersionUpdatePreconditionFailed
const VersionUpdatePreconditionFailedCode int = 412

/*VersionUpdatePreconditionFailed Failed to parse request body

swagger:response versionUpdatePreconditionFailed
*/
type VersionUpdatePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewVersionUpdatePreconditionFailed creates VersionUpdatePreconditionFailed with default headers values
func NewVersionUpdatePreconditionFailed() *VersionUpdatePreconditionFailed {

	return &VersionUpdatePreconditionFailed{}
}

// WithPayload adds the payload to the version update precondition failed response
func (o *VersionUpdatePreconditionFailed) WithPayload(payload *models.GeneralError) *VersionUpdatePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version update precondition failed response
func (o *VersionUpdatePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionUpdatePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VersionUpdateUnprocessableEntityCode is the HTTP code returned for type VersionUpdateUnprocessableEntity
const VersionUpdateUnprocessableEntityCode int = 422

/*VersionUpdateUnprocessableEntity Failed to validate request

swagger:response versionUpdateUnprocessableEntity
*/
type VersionUpdateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewVersionUpdateUnprocessableEntity creates VersionUpdateUnprocessableEntity with default headers values
func NewVersionUpdateUnprocessableEntity() *VersionUpdateUnprocessableEntity {

	return &VersionUpdateUnprocessableEntity{}
}

// WithPayload adds the payload to the version update unprocessable entity response
func (o *VersionUpdateUnprocessableEntity) WithPayload(payload *models.ValidationError) *VersionUpdateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version update unprocessable entity response
func (o *VersionUpdateUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionUpdateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*VersionUpdateDefault Some error unrelated to the handler

swagger:response versionUpdateDefault
*/
type VersionUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewVersionUpdateDefault creates VersionUpdateDefault with default headers values
func NewVersionUpdateDefault(code int) *VersionUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &VersionUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the version update default response
func (o *VersionUpdateDefault) WithStatusCode(code int) *VersionUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the version update default response
func (o *VersionUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the version update default response
func (o *VersionUpdateDefault) WithPayload(payload *models.GeneralError) *VersionUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version update default response
func (o *VersionUpdateDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
