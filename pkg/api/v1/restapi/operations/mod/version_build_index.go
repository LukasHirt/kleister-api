// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// VersionBuildIndexHandlerFunc turns a function with the right signature into a version build index handler
type VersionBuildIndexHandlerFunc func(VersionBuildIndexParams) middleware.Responder

// Handle executing the request and returning a response
func (fn VersionBuildIndexHandlerFunc) Handle(params VersionBuildIndexParams) middleware.Responder {
	return fn(params)
}

// VersionBuildIndexHandler interface for that can handle valid version build index params
type VersionBuildIndexHandler interface {
	Handle(VersionBuildIndexParams) middleware.Responder
}

// NewVersionBuildIndex creates a new http.Handler for the version build index operation
func NewVersionBuildIndex(ctx *middleware.Context, handler VersionBuildIndexHandler) *VersionBuildIndex {
	return &VersionBuildIndex{Context: ctx, Handler: handler}
}

/*VersionBuildIndex swagger:route GET /mods/{modID}/versions/{versionID}/builds mod versionBuildIndex

Fetch all builds assigned to version

*/
type VersionBuildIndex struct {
	Context *middleware.Context
	Handler VersionBuildIndexHandler
}

func (o *VersionBuildIndex) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewVersionBuildIndexParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
