// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// PermitModUserOKCode is the HTTP code returned for type PermitModUserOK
const PermitModUserOKCode int = 200

/*PermitModUserOK Plain success message

swagger:response permitModUserOK
*/
type PermitModUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitModUserOK creates PermitModUserOK with default headers values
func NewPermitModUserOK() *PermitModUserOK {

	return &PermitModUserOK{}
}

// WithPayload adds the payload to the permit mod user o k response
func (o *PermitModUserOK) WithPayload(payload *models.GeneralError) *PermitModUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit mod user o k response
func (o *PermitModUserOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitModUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitModUserForbiddenCode is the HTTP code returned for type PermitModUserForbidden
const PermitModUserForbiddenCode int = 403

/*PermitModUserForbidden User is not authorized

swagger:response permitModUserForbidden
*/
type PermitModUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitModUserForbidden creates PermitModUserForbidden with default headers values
func NewPermitModUserForbidden() *PermitModUserForbidden {

	return &PermitModUserForbidden{}
}

// WithPayload adds the payload to the permit mod user forbidden response
func (o *PermitModUserForbidden) WithPayload(payload *models.GeneralError) *PermitModUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit mod user forbidden response
func (o *PermitModUserForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitModUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitModUserPreconditionFailedCode is the HTTP code returned for type PermitModUserPreconditionFailed
const PermitModUserPreconditionFailedCode int = 412

/*PermitModUserPreconditionFailed Failed to parse request body

swagger:response permitModUserPreconditionFailed
*/
type PermitModUserPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitModUserPreconditionFailed creates PermitModUserPreconditionFailed with default headers values
func NewPermitModUserPreconditionFailed() *PermitModUserPreconditionFailed {

	return &PermitModUserPreconditionFailed{}
}

// WithPayload adds the payload to the permit mod user precondition failed response
func (o *PermitModUserPreconditionFailed) WithPayload(payload *models.GeneralError) *PermitModUserPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit mod user precondition failed response
func (o *PermitModUserPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitModUserPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitModUserUnprocessableEntityCode is the HTTP code returned for type PermitModUserUnprocessableEntity
const PermitModUserUnprocessableEntityCode int = 422

/*PermitModUserUnprocessableEntity User is not assigned

swagger:response permitModUserUnprocessableEntity
*/
type PermitModUserUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitModUserUnprocessableEntity creates PermitModUserUnprocessableEntity with default headers values
func NewPermitModUserUnprocessableEntity() *PermitModUserUnprocessableEntity {

	return &PermitModUserUnprocessableEntity{}
}

// WithPayload adds the payload to the permit mod user unprocessable entity response
func (o *PermitModUserUnprocessableEntity) WithPayload(payload *models.GeneralError) *PermitModUserUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit mod user unprocessable entity response
func (o *PermitModUserUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitModUserUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PermitModUserDefault Some error unrelated to the handler

swagger:response permitModUserDefault
*/
type PermitModUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitModUserDefault creates PermitModUserDefault with default headers values
func NewPermitModUserDefault(code int) *PermitModUserDefault {
	if code <= 0 {
		code = 500
	}

	return &PermitModUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the permit mod user default response
func (o *PermitModUserDefault) WithStatusCode(code int) *PermitModUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the permit mod user default response
func (o *PermitModUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the permit mod user default response
func (o *PermitModUserDefault) WithPayload(payload *models.GeneralError) *PermitModUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit mod user default response
func (o *PermitModUserDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitModUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
