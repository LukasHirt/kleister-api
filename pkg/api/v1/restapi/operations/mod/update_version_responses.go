// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// UpdateVersionOKCode is the HTTP code returned for type UpdateVersionOK
const UpdateVersionOKCode int = 200

/*UpdateVersionOK The updated version details

swagger:response updateVersionOK
*/
type UpdateVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Version `json:"body,omitempty"`
}

// NewUpdateVersionOK creates UpdateVersionOK with default headers values
func NewUpdateVersionOK() *UpdateVersionOK {

	return &UpdateVersionOK{}
}

// WithPayload adds the payload to the update version o k response
func (o *UpdateVersionOK) WithPayload(payload *models.Version) *UpdateVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update version o k response
func (o *UpdateVersionOK) SetPayload(payload *models.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVersionForbiddenCode is the HTTP code returned for type UpdateVersionForbidden
const UpdateVersionForbiddenCode int = 403

/*UpdateVersionForbidden User is not authorized

swagger:response updateVersionForbidden
*/
type UpdateVersionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateVersionForbidden creates UpdateVersionForbidden with default headers values
func NewUpdateVersionForbidden() *UpdateVersionForbidden {

	return &UpdateVersionForbidden{}
}

// WithPayload adds the payload to the update version forbidden response
func (o *UpdateVersionForbidden) WithPayload(payload *models.GeneralError) *UpdateVersionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update version forbidden response
func (o *UpdateVersionForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVersionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVersionPreconditionFailedCode is the HTTP code returned for type UpdateVersionPreconditionFailed
const UpdateVersionPreconditionFailedCode int = 412

/*UpdateVersionPreconditionFailed Failed to parse request body

swagger:response updateVersionPreconditionFailed
*/
type UpdateVersionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateVersionPreconditionFailed creates UpdateVersionPreconditionFailed with default headers values
func NewUpdateVersionPreconditionFailed() *UpdateVersionPreconditionFailed {

	return &UpdateVersionPreconditionFailed{}
}

// WithPayload adds the payload to the update version precondition failed response
func (o *UpdateVersionPreconditionFailed) WithPayload(payload *models.GeneralError) *UpdateVersionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update version precondition failed response
func (o *UpdateVersionPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVersionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVersionUnprocessableEntityCode is the HTTP code returned for type UpdateVersionUnprocessableEntity
const UpdateVersionUnprocessableEntityCode int = 422

/*UpdateVersionUnprocessableEntity Failed to validate request

swagger:response updateVersionUnprocessableEntity
*/
type UpdateVersionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewUpdateVersionUnprocessableEntity creates UpdateVersionUnprocessableEntity with default headers values
func NewUpdateVersionUnprocessableEntity() *UpdateVersionUnprocessableEntity {

	return &UpdateVersionUnprocessableEntity{}
}

// WithPayload adds the payload to the update version unprocessable entity response
func (o *UpdateVersionUnprocessableEntity) WithPayload(payload *models.ValidationError) *UpdateVersionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update version unprocessable entity response
func (o *UpdateVersionUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVersionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateVersionDefault Some error unrelated to the handler

swagger:response updateVersionDefault
*/
type UpdateVersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateVersionDefault creates UpdateVersionDefault with default headers values
func NewUpdateVersionDefault(code int) *UpdateVersionDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateVersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update version default response
func (o *UpdateVersionDefault) WithStatusCode(code int) *UpdateVersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update version default response
func (o *UpdateVersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update version default response
func (o *UpdateVersionDefault) WithPayload(payload *models.GeneralError) *UpdateVersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update version default response
func (o *UpdateVersionDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
