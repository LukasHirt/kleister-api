// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ShowModOKCode is the HTTP code returned for type ShowModOK
const ShowModOKCode int = 200

/*ShowModOK The fetched mod details

swagger:response showModOK
*/
type ShowModOK struct {

	/*
	  In: Body
	*/
	Payload *models.Mod `json:"body,omitempty"`
}

// NewShowModOK creates ShowModOK with default headers values
func NewShowModOK() *ShowModOK {

	return &ShowModOK{}
}

// WithPayload adds the payload to the show mod o k response
func (o *ShowModOK) WithPayload(payload *models.Mod) *ShowModOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show mod o k response
func (o *ShowModOK) SetPayload(payload *models.Mod) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowModOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowModForbiddenCode is the HTTP code returned for type ShowModForbidden
const ShowModForbiddenCode int = 403

/*ShowModForbidden User is not authorized

swagger:response showModForbidden
*/
type ShowModForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewShowModForbidden creates ShowModForbidden with default headers values
func NewShowModForbidden() *ShowModForbidden {

	return &ShowModForbidden{}
}

// WithPayload adds the payload to the show mod forbidden response
func (o *ShowModForbidden) WithPayload(payload *models.GeneralError) *ShowModForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show mod forbidden response
func (o *ShowModForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowModForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ShowModNotFoundCode is the HTTP code returned for type ShowModNotFound
const ShowModNotFoundCode int = 404

/*ShowModNotFound Mod not found

swagger:response showModNotFound
*/
type ShowModNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewShowModNotFound creates ShowModNotFound with default headers values
func NewShowModNotFound() *ShowModNotFound {

	return &ShowModNotFound{}
}

// WithPayload adds the payload to the show mod not found response
func (o *ShowModNotFound) WithPayload(payload *models.GeneralError) *ShowModNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show mod not found response
func (o *ShowModNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowModNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ShowModDefault Some error unrelated to the handler

swagger:response showModDefault
*/
type ShowModDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewShowModDefault creates ShowModDefault with default headers values
func NewShowModDefault(code int) *ShowModDefault {
	if code <= 0 {
		code = 500
	}

	return &ShowModDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the show mod default response
func (o *ShowModDefault) WithStatusCode(code int) *ShowModDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the show mod default response
func (o *ShowModDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the show mod default response
func (o *ShowModDefault) WithPayload(payload *models.GeneralError) *ShowModDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the show mod default response
func (o *ShowModDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShowModDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
