// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// VersionBuildIndexOKCode is the HTTP code returned for type VersionBuildIndexOK
const VersionBuildIndexOKCode int = 200

/*VersionBuildIndexOK A collection of version builds

swagger:response versionBuildIndexOK
*/
type VersionBuildIndexOK struct {

	/*
	  In: Body
	*/
	Payload []*models.BuildVersion `json:"body,omitempty"`
}

// NewVersionBuildIndexOK creates VersionBuildIndexOK with default headers values
func NewVersionBuildIndexOK() *VersionBuildIndexOK {

	return &VersionBuildIndexOK{}
}

// WithPayload adds the payload to the version build index o k response
func (o *VersionBuildIndexOK) WithPayload(payload []*models.BuildVersion) *VersionBuildIndexOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version build index o k response
func (o *VersionBuildIndexOK) SetPayload(payload []*models.BuildVersion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionBuildIndexOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.BuildVersion, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// VersionBuildIndexForbiddenCode is the HTTP code returned for type VersionBuildIndexForbidden
const VersionBuildIndexForbiddenCode int = 403

/*VersionBuildIndexForbidden User is not authorized

swagger:response versionBuildIndexForbidden
*/
type VersionBuildIndexForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewVersionBuildIndexForbidden creates VersionBuildIndexForbidden with default headers values
func NewVersionBuildIndexForbidden() *VersionBuildIndexForbidden {

	return &VersionBuildIndexForbidden{}
}

// WithPayload adds the payload to the version build index forbidden response
func (o *VersionBuildIndexForbidden) WithPayload(payload *models.GeneralError) *VersionBuildIndexForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version build index forbidden response
func (o *VersionBuildIndexForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionBuildIndexForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*VersionBuildIndexDefault Some error unrelated to the handler

swagger:response versionBuildIndexDefault
*/
type VersionBuildIndexDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewVersionBuildIndexDefault creates VersionBuildIndexDefault with default headers values
func NewVersionBuildIndexDefault(code int) *VersionBuildIndexDefault {
	if code <= 0 {
		code = 500
	}

	return &VersionBuildIndexDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the version build index default response
func (o *VersionBuildIndexDefault) WithStatusCode(code int) *VersionBuildIndexDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the version build index default response
func (o *VersionBuildIndexDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the version build index default response
func (o *VersionBuildIndexDefault) WithPayload(payload *models.GeneralError) *VersionBuildIndexDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version build index default response
func (o *VersionBuildIndexDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionBuildIndexDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
