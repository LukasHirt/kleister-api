// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeleteModFromTeamOKCode is the HTTP code returned for type DeleteModFromTeamOK
const DeleteModFromTeamOKCode int = 200

/*
DeleteModFromTeamOK Plain success message

swagger:response deleteModFromTeamOK
*/
type DeleteModFromTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromTeamOK creates DeleteModFromTeamOK with default headers values
func NewDeleteModFromTeamOK() *DeleteModFromTeamOK {

	return &DeleteModFromTeamOK{}
}

// WithPayload adds the payload to the delete mod from team o k response
func (o *DeleteModFromTeamOK) WithPayload(payload *models.GeneralError) *DeleteModFromTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from team o k response
func (o *DeleteModFromTeamOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromTeamForbiddenCode is the HTTP code returned for type DeleteModFromTeamForbidden
const DeleteModFromTeamForbiddenCode int = 403

/*
DeleteModFromTeamForbidden User is not authorized

swagger:response deleteModFromTeamForbidden
*/
type DeleteModFromTeamForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromTeamForbidden creates DeleteModFromTeamForbidden with default headers values
func NewDeleteModFromTeamForbidden() *DeleteModFromTeamForbidden {

	return &DeleteModFromTeamForbidden{}
}

// WithPayload adds the payload to the delete mod from team forbidden response
func (o *DeleteModFromTeamForbidden) WithPayload(payload *models.GeneralError) *DeleteModFromTeamForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from team forbidden response
func (o *DeleteModFromTeamForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromTeamForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromTeamNotFoundCode is the HTTP code returned for type DeleteModFromTeamNotFound
const DeleteModFromTeamNotFoundCode int = 404

/*
DeleteModFromTeamNotFound Mod or team not found

swagger:response deleteModFromTeamNotFound
*/
type DeleteModFromTeamNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromTeamNotFound creates DeleteModFromTeamNotFound with default headers values
func NewDeleteModFromTeamNotFound() *DeleteModFromTeamNotFound {

	return &DeleteModFromTeamNotFound{}
}

// WithPayload adds the payload to the delete mod from team not found response
func (o *DeleteModFromTeamNotFound) WithPayload(payload *models.GeneralError) *DeleteModFromTeamNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from team not found response
func (o *DeleteModFromTeamNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromTeamNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromTeamPreconditionFailedCode is the HTTP code returned for type DeleteModFromTeamPreconditionFailed
const DeleteModFromTeamPreconditionFailedCode int = 412

/*
DeleteModFromTeamPreconditionFailed Team is not assigned

swagger:response deleteModFromTeamPreconditionFailed
*/
type DeleteModFromTeamPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromTeamPreconditionFailed creates DeleteModFromTeamPreconditionFailed with default headers values
func NewDeleteModFromTeamPreconditionFailed() *DeleteModFromTeamPreconditionFailed {

	return &DeleteModFromTeamPreconditionFailed{}
}

// WithPayload adds the payload to the delete mod from team precondition failed response
func (o *DeleteModFromTeamPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteModFromTeamPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from team precondition failed response
func (o *DeleteModFromTeamPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromTeamPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeleteModFromTeamDefault Some error unrelated to the handler

swagger:response deleteModFromTeamDefault
*/
type DeleteModFromTeamDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromTeamDefault creates DeleteModFromTeamDefault with default headers values
func NewDeleteModFromTeamDefault(code int) *DeleteModFromTeamDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteModFromTeamDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete mod from team default response
func (o *DeleteModFromTeamDefault) WithStatusCode(code int) *DeleteModFromTeamDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete mod from team default response
func (o *DeleteModFromTeamDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete mod from team default response
func (o *DeleteModFromTeamDefault) WithPayload(payload *models.GeneralError) *DeleteModFromTeamDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from team default response
func (o *DeleteModFromTeamDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromTeamDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
