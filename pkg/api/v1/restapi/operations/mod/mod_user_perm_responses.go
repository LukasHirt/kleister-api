// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ModUserPermOKCode is the HTTP code returned for type ModUserPermOK
const ModUserPermOKCode int = 200

/*ModUserPermOK Plain success message

swagger:response modUserPermOK
*/
type ModUserPermOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserPermOK creates ModUserPermOK with default headers values
func NewModUserPermOK() *ModUserPermOK {

	return &ModUserPermOK{}
}

// WithPayload adds the payload to the mod user perm o k response
func (o *ModUserPermOK) WithPayload(payload *models.GeneralError) *ModUserPermOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user perm o k response
func (o *ModUserPermOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserPermOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserPermForbiddenCode is the HTTP code returned for type ModUserPermForbidden
const ModUserPermForbiddenCode int = 403

/*ModUserPermForbidden User is not authorized

swagger:response modUserPermForbidden
*/
type ModUserPermForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserPermForbidden creates ModUserPermForbidden with default headers values
func NewModUserPermForbidden() *ModUserPermForbidden {

	return &ModUserPermForbidden{}
}

// WithPayload adds the payload to the mod user perm forbidden response
func (o *ModUserPermForbidden) WithPayload(payload *models.GeneralError) *ModUserPermForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user perm forbidden response
func (o *ModUserPermForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserPermForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserPermPreconditionFailedCode is the HTTP code returned for type ModUserPermPreconditionFailed
const ModUserPermPreconditionFailedCode int = 412

/*ModUserPermPreconditionFailed Failed to parse request body

swagger:response modUserPermPreconditionFailed
*/
type ModUserPermPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserPermPreconditionFailed creates ModUserPermPreconditionFailed with default headers values
func NewModUserPermPreconditionFailed() *ModUserPermPreconditionFailed {

	return &ModUserPermPreconditionFailed{}
}

// WithPayload adds the payload to the mod user perm precondition failed response
func (o *ModUserPermPreconditionFailed) WithPayload(payload *models.GeneralError) *ModUserPermPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user perm precondition failed response
func (o *ModUserPermPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserPermPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserPermUnprocessableEntityCode is the HTTP code returned for type ModUserPermUnprocessableEntity
const ModUserPermUnprocessableEntityCode int = 422

/*ModUserPermUnprocessableEntity User is not assigned

swagger:response modUserPermUnprocessableEntity
*/
type ModUserPermUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserPermUnprocessableEntity creates ModUserPermUnprocessableEntity with default headers values
func NewModUserPermUnprocessableEntity() *ModUserPermUnprocessableEntity {

	return &ModUserPermUnprocessableEntity{}
}

// WithPayload adds the payload to the mod user perm unprocessable entity response
func (o *ModUserPermUnprocessableEntity) WithPayload(payload *models.GeneralError) *ModUserPermUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user perm unprocessable entity response
func (o *ModUserPermUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserPermUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ModUserPermDefault Some error unrelated to the handler

swagger:response modUserPermDefault
*/
type ModUserPermDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserPermDefault creates ModUserPermDefault with default headers values
func NewModUserPermDefault(code int) *ModUserPermDefault {
	if code <= 0 {
		code = 500
	}

	return &ModUserPermDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the mod user perm default response
func (o *ModUserPermDefault) WithStatusCode(code int) *ModUserPermDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the mod user perm default response
func (o *ModUserPermDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the mod user perm default response
func (o *ModUserPermDefault) WithPayload(payload *models.GeneralError) *ModUserPermDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user perm default response
func (o *ModUserPermDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserPermDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
