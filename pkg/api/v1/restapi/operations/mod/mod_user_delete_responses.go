// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ModUserDeleteOKCode is the HTTP code returned for type ModUserDeleteOK
const ModUserDeleteOKCode int = 200

/*ModUserDeleteOK Plain success message

swagger:response modUserDeleteOK
*/
type ModUserDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserDeleteOK creates ModUserDeleteOK with default headers values
func NewModUserDeleteOK() *ModUserDeleteOK {

	return &ModUserDeleteOK{}
}

// WithPayload adds the payload to the mod user delete o k response
func (o *ModUserDeleteOK) WithPayload(payload *models.GeneralError) *ModUserDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user delete o k response
func (o *ModUserDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserDeleteForbiddenCode is the HTTP code returned for type ModUserDeleteForbidden
const ModUserDeleteForbiddenCode int = 403

/*ModUserDeleteForbidden User is not authorized

swagger:response modUserDeleteForbidden
*/
type ModUserDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserDeleteForbidden creates ModUserDeleteForbidden with default headers values
func NewModUserDeleteForbidden() *ModUserDeleteForbidden {

	return &ModUserDeleteForbidden{}
}

// WithPayload adds the payload to the mod user delete forbidden response
func (o *ModUserDeleteForbidden) WithPayload(payload *models.GeneralError) *ModUserDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user delete forbidden response
func (o *ModUserDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserDeletePreconditionFailedCode is the HTTP code returned for type ModUserDeletePreconditionFailed
const ModUserDeletePreconditionFailedCode int = 412

/*ModUserDeletePreconditionFailed Failed to parse request body

swagger:response modUserDeletePreconditionFailed
*/
type ModUserDeletePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserDeletePreconditionFailed creates ModUserDeletePreconditionFailed with default headers values
func NewModUserDeletePreconditionFailed() *ModUserDeletePreconditionFailed {

	return &ModUserDeletePreconditionFailed{}
}

// WithPayload adds the payload to the mod user delete precondition failed response
func (o *ModUserDeletePreconditionFailed) WithPayload(payload *models.GeneralError) *ModUserDeletePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user delete precondition failed response
func (o *ModUserDeletePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserDeletePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModUserDeleteUnprocessableEntityCode is the HTTP code returned for type ModUserDeleteUnprocessableEntity
const ModUserDeleteUnprocessableEntityCode int = 422

/*ModUserDeleteUnprocessableEntity User is not assigned

swagger:response modUserDeleteUnprocessableEntity
*/
type ModUserDeleteUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserDeleteUnprocessableEntity creates ModUserDeleteUnprocessableEntity with default headers values
func NewModUserDeleteUnprocessableEntity() *ModUserDeleteUnprocessableEntity {

	return &ModUserDeleteUnprocessableEntity{}
}

// WithPayload adds the payload to the mod user delete unprocessable entity response
func (o *ModUserDeleteUnprocessableEntity) WithPayload(payload *models.GeneralError) *ModUserDeleteUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user delete unprocessable entity response
func (o *ModUserDeleteUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ModUserDeleteDefault Some error unrelated to the handler

swagger:response modUserDeleteDefault
*/
type ModUserDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModUserDeleteDefault creates ModUserDeleteDefault with default headers values
func NewModUserDeleteDefault(code int) *ModUserDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &ModUserDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the mod user delete default response
func (o *ModUserDeleteDefault) WithStatusCode(code int) *ModUserDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the mod user delete default response
func (o *ModUserDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the mod user delete default response
func (o *ModUserDeleteDefault) WithPayload(payload *models.GeneralError) *ModUserDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod user delete default response
func (o *ModUserDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModUserDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
