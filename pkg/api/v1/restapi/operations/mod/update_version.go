// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateVersionHandlerFunc turns a function with the right signature into a update version handler
type UpdateVersionHandlerFunc func(UpdateVersionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateVersionHandlerFunc) Handle(params UpdateVersionParams) middleware.Responder {
	return fn(params)
}

// UpdateVersionHandler interface for that can handle valid update version params
type UpdateVersionHandler interface {
	Handle(UpdateVersionParams) middleware.Responder
}

// NewUpdateVersion creates a new http.Handler for the update version operation
func NewUpdateVersion(ctx *middleware.Context, handler UpdateVersionHandler) *UpdateVersion {
	return &UpdateVersion{Context: ctx, Handler: handler}
}

/*UpdateVersion swagger:route PUT /mods/{modID}/versions/{versionID} mod updateVersion

Update a specific version for a mod

*/
type UpdateVersion struct {
	Context *middleware.Context
	Handler UpdateVersionHandler
}

func (o *UpdateVersion) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateVersionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
