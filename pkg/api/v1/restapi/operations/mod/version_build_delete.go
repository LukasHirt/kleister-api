// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// VersionBuildDeleteHandlerFunc turns a function with the right signature into a version build delete handler
type VersionBuildDeleteHandlerFunc func(VersionBuildDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn VersionBuildDeleteHandlerFunc) Handle(params VersionBuildDeleteParams) middleware.Responder {
	return fn(params)
}

// VersionBuildDeleteHandler interface for that can handle valid version build delete params
type VersionBuildDeleteHandler interface {
	Handle(VersionBuildDeleteParams) middleware.Responder
}

// NewVersionBuildDelete creates a new http.Handler for the version build delete operation
func NewVersionBuildDelete(ctx *middleware.Context, handler VersionBuildDeleteHandler) *VersionBuildDelete {
	return &VersionBuildDelete{Context: ctx, Handler: handler}
}

/*VersionBuildDelete swagger:route DELETE /mods/{modID}/versions/{versionID}/builds mod versionBuildDelete

Unlink a build from a version

*/
type VersionBuildDelete struct {
	Context *middleware.Context
	Handler VersionBuildDeleteHandler
}

func (o *VersionBuildDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewVersionBuildDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
