// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeleteModFromUserOKCode is the HTTP code returned for type DeleteModFromUserOK
const DeleteModFromUserOKCode int = 200

/*DeleteModFromUserOK Plain success message

swagger:response deleteModFromUserOK
*/
type DeleteModFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromUserOK creates DeleteModFromUserOK with default headers values
func NewDeleteModFromUserOK() *DeleteModFromUserOK {

	return &DeleteModFromUserOK{}
}

// WithPayload adds the payload to the delete mod from user o k response
func (o *DeleteModFromUserOK) WithPayload(payload *models.GeneralError) *DeleteModFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from user o k response
func (o *DeleteModFromUserOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromUserForbiddenCode is the HTTP code returned for type DeleteModFromUserForbidden
const DeleteModFromUserForbiddenCode int = 403

/*DeleteModFromUserForbidden User is not authorized

swagger:response deleteModFromUserForbidden
*/
type DeleteModFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromUserForbidden creates DeleteModFromUserForbidden with default headers values
func NewDeleteModFromUserForbidden() *DeleteModFromUserForbidden {

	return &DeleteModFromUserForbidden{}
}

// WithPayload adds the payload to the delete mod from user forbidden response
func (o *DeleteModFromUserForbidden) WithPayload(payload *models.GeneralError) *DeleteModFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from user forbidden response
func (o *DeleteModFromUserForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromUserNotFoundCode is the HTTP code returned for type DeleteModFromUserNotFound
const DeleteModFromUserNotFoundCode int = 404

/*DeleteModFromUserNotFound Mod or user not found

swagger:response deleteModFromUserNotFound
*/
type DeleteModFromUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromUserNotFound creates DeleteModFromUserNotFound with default headers values
func NewDeleteModFromUserNotFound() *DeleteModFromUserNotFound {

	return &DeleteModFromUserNotFound{}
}

// WithPayload adds the payload to the delete mod from user not found response
func (o *DeleteModFromUserNotFound) WithPayload(payload *models.GeneralError) *DeleteModFromUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from user not found response
func (o *DeleteModFromUserNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteModFromUserPreconditionFailedCode is the HTTP code returned for type DeleteModFromUserPreconditionFailed
const DeleteModFromUserPreconditionFailedCode int = 412

/*DeleteModFromUserPreconditionFailed User is not assigned

swagger:response deleteModFromUserPreconditionFailed
*/
type DeleteModFromUserPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromUserPreconditionFailed creates DeleteModFromUserPreconditionFailed with default headers values
func NewDeleteModFromUserPreconditionFailed() *DeleteModFromUserPreconditionFailed {

	return &DeleteModFromUserPreconditionFailed{}
}

// WithPayload adds the payload to the delete mod from user precondition failed response
func (o *DeleteModFromUserPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteModFromUserPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from user precondition failed response
func (o *DeleteModFromUserPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromUserPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteModFromUserDefault Some error unrelated to the handler

swagger:response deleteModFromUserDefault
*/
type DeleteModFromUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteModFromUserDefault creates DeleteModFromUserDefault with default headers values
func NewDeleteModFromUserDefault(code int) *DeleteModFromUserDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteModFromUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete mod from user default response
func (o *DeleteModFromUserDefault) WithStatusCode(code int) *DeleteModFromUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete mod from user default response
func (o *DeleteModFromUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete mod from user default response
func (o *DeleteModFromUserDefault) WithPayload(payload *models.GeneralError) *DeleteModFromUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete mod from user default response
func (o *DeleteModFromUserDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteModFromUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
