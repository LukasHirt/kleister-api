// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ModDeleteOKCode is the HTTP code returned for type ModDeleteOK
const ModDeleteOKCode int = 200

/*ModDeleteOK Plain success message

swagger:response modDeleteOK
*/
type ModDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModDeleteOK creates ModDeleteOK with default headers values
func NewModDeleteOK() *ModDeleteOK {

	return &ModDeleteOK{}
}

// WithPayload adds the payload to the mod delete o k response
func (o *ModDeleteOK) WithPayload(payload *models.GeneralError) *ModDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod delete o k response
func (o *ModDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModDeleteBadRequestCode is the HTTP code returned for type ModDeleteBadRequest
const ModDeleteBadRequestCode int = 400

/*ModDeleteBadRequest Failed to delete the mod

swagger:response modDeleteBadRequest
*/
type ModDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModDeleteBadRequest creates ModDeleteBadRequest with default headers values
func NewModDeleteBadRequest() *ModDeleteBadRequest {

	return &ModDeleteBadRequest{}
}

// WithPayload adds the payload to the mod delete bad request response
func (o *ModDeleteBadRequest) WithPayload(payload *models.GeneralError) *ModDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod delete bad request response
func (o *ModDeleteBadRequest) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModDeleteForbiddenCode is the HTTP code returned for type ModDeleteForbidden
const ModDeleteForbiddenCode int = 403

/*ModDeleteForbidden User is not authorized

swagger:response modDeleteForbidden
*/
type ModDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModDeleteForbidden creates ModDeleteForbidden with default headers values
func NewModDeleteForbidden() *ModDeleteForbidden {

	return &ModDeleteForbidden{}
}

// WithPayload adds the payload to the mod delete forbidden response
func (o *ModDeleteForbidden) WithPayload(payload *models.GeneralError) *ModDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod delete forbidden response
func (o *ModDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ModDeleteDefault Some error unrelated to the handler

swagger:response modDeleteDefault
*/
type ModDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewModDeleteDefault creates ModDeleteDefault with default headers values
func NewModDeleteDefault(code int) *ModDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &ModDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the mod delete default response
func (o *ModDeleteDefault) WithStatusCode(code int) *ModDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the mod delete default response
func (o *ModDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the mod delete default response
func (o *ModDeleteDefault) WithPayload(payload *models.GeneralError) *ModDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mod delete default response
func (o *ModDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
