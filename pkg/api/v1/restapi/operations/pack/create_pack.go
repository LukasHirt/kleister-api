// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreatePackHandlerFunc turns a function with the right signature into a create pack handler
type CreatePackHandlerFunc func(CreatePackParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreatePackHandlerFunc) Handle(params CreatePackParams) middleware.Responder {
	return fn(params)
}

// CreatePackHandler interface for that can handle valid create pack params
type CreatePackHandler interface {
	Handle(CreatePackParams) middleware.Responder
}

// NewCreatePack creates a new http.Handler for the create pack operation
func NewCreatePack(ctx *middleware.Context, handler CreatePackHandler) *CreatePack {
	return &CreatePack{Context: ctx, Handler: handler}
}

/*CreatePack swagger:route POST /packs pack createPack

Create a new pack

*/
type CreatePack struct {
	Context *middleware.Context
	Handler CreatePackHandler
}

func (o *CreatePack) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreatePackParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
