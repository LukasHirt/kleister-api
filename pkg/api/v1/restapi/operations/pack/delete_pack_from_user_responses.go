// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeletePackFromUserOKCode is the HTTP code returned for type DeletePackFromUserOK
const DeletePackFromUserOKCode int = 200

/*
DeletePackFromUserOK Plain success message

swagger:response deletePackFromUserOK
*/
type DeletePackFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromUserOK creates DeletePackFromUserOK with default headers values
func NewDeletePackFromUserOK() *DeletePackFromUserOK {

	return &DeletePackFromUserOK{}
}

// WithPayload adds the payload to the delete pack from user o k response
func (o *DeletePackFromUserOK) WithPayload(payload *models.GeneralError) *DeletePackFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from user o k response
func (o *DeletePackFromUserOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromUserForbiddenCode is the HTTP code returned for type DeletePackFromUserForbidden
const DeletePackFromUserForbiddenCode int = 403

/*
DeletePackFromUserForbidden User is not authorized

swagger:response deletePackFromUserForbidden
*/
type DeletePackFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromUserForbidden creates DeletePackFromUserForbidden with default headers values
func NewDeletePackFromUserForbidden() *DeletePackFromUserForbidden {

	return &DeletePackFromUserForbidden{}
}

// WithPayload adds the payload to the delete pack from user forbidden response
func (o *DeletePackFromUserForbidden) WithPayload(payload *models.GeneralError) *DeletePackFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from user forbidden response
func (o *DeletePackFromUserForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromUserNotFoundCode is the HTTP code returned for type DeletePackFromUserNotFound
const DeletePackFromUserNotFoundCode int = 404

/*
DeletePackFromUserNotFound Pack or user not found

swagger:response deletePackFromUserNotFound
*/
type DeletePackFromUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromUserNotFound creates DeletePackFromUserNotFound with default headers values
func NewDeletePackFromUserNotFound() *DeletePackFromUserNotFound {

	return &DeletePackFromUserNotFound{}
}

// WithPayload adds the payload to the delete pack from user not found response
func (o *DeletePackFromUserNotFound) WithPayload(payload *models.GeneralError) *DeletePackFromUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from user not found response
func (o *DeletePackFromUserNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromUserPreconditionFailedCode is the HTTP code returned for type DeletePackFromUserPreconditionFailed
const DeletePackFromUserPreconditionFailedCode int = 412

/*
DeletePackFromUserPreconditionFailed User is not assigned

swagger:response deletePackFromUserPreconditionFailed
*/
type DeletePackFromUserPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromUserPreconditionFailed creates DeletePackFromUserPreconditionFailed with default headers values
func NewDeletePackFromUserPreconditionFailed() *DeletePackFromUserPreconditionFailed {

	return &DeletePackFromUserPreconditionFailed{}
}

// WithPayload adds the payload to the delete pack from user precondition failed response
func (o *DeletePackFromUserPreconditionFailed) WithPayload(payload *models.GeneralError) *DeletePackFromUserPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from user precondition failed response
func (o *DeletePackFromUserPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromUserPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeletePackFromUserDefault Some error unrelated to the handler

swagger:response deletePackFromUserDefault
*/
type DeletePackFromUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromUserDefault creates DeletePackFromUserDefault with default headers values
func NewDeletePackFromUserDefault(code int) *DeletePackFromUserDefault {
	if code <= 0 {
		code = 500
	}

	return &DeletePackFromUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete pack from user default response
func (o *DeletePackFromUserDefault) WithStatusCode(code int) *DeletePackFromUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete pack from user default response
func (o *DeletePackFromUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete pack from user default response
func (o *DeletePackFromUserDefault) WithPayload(payload *models.GeneralError) *DeletePackFromUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from user default response
func (o *DeletePackFromUserDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
