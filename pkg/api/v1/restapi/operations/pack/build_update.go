// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// BuildUpdateHandlerFunc turns a function with the right signature into a build update handler
type BuildUpdateHandlerFunc func(BuildUpdateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BuildUpdateHandlerFunc) Handle(params BuildUpdateParams) middleware.Responder {
	return fn(params)
}

// BuildUpdateHandler interface for that can handle valid build update params
type BuildUpdateHandler interface {
	Handle(BuildUpdateParams) middleware.Responder
}

// NewBuildUpdate creates a new http.Handler for the build update operation
func NewBuildUpdate(ctx *middleware.Context, handler BuildUpdateHandler) *BuildUpdate {
	return &BuildUpdate{Context: ctx, Handler: handler}
}

/*BuildUpdate swagger:route PUT /packs/{packID}/builds/{buildID} pack buildUpdate

Update a specific build for a pack

*/
type BuildUpdate struct {
	Context *middleware.Context
	Handler BuildUpdateHandler
}

func (o *BuildUpdate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBuildUpdateParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
