// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// PackDeleteOKCode is the HTTP code returned for type PackDeleteOK
const PackDeleteOKCode int = 200

/*PackDeleteOK Plain success message

swagger:response packDeleteOK
*/
type PackDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackDeleteOK creates PackDeleteOK with default headers values
func NewPackDeleteOK() *PackDeleteOK {

	return &PackDeleteOK{}
}

// WithPayload adds the payload to the pack delete o k response
func (o *PackDeleteOK) WithPayload(payload *models.GeneralError) *PackDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack delete o k response
func (o *PackDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PackDeleteBadRequestCode is the HTTP code returned for type PackDeleteBadRequest
const PackDeleteBadRequestCode int = 400

/*PackDeleteBadRequest Failed to delete the pack

swagger:response packDeleteBadRequest
*/
type PackDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackDeleteBadRequest creates PackDeleteBadRequest with default headers values
func NewPackDeleteBadRequest() *PackDeleteBadRequest {

	return &PackDeleteBadRequest{}
}

// WithPayload adds the payload to the pack delete bad request response
func (o *PackDeleteBadRequest) WithPayload(payload *models.GeneralError) *PackDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack delete bad request response
func (o *PackDeleteBadRequest) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PackDeleteForbiddenCode is the HTTP code returned for type PackDeleteForbidden
const PackDeleteForbiddenCode int = 403

/*PackDeleteForbidden User is not authorized

swagger:response packDeleteForbidden
*/
type PackDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackDeleteForbidden creates PackDeleteForbidden with default headers values
func NewPackDeleteForbidden() *PackDeleteForbidden {

	return &PackDeleteForbidden{}
}

// WithPayload adds the payload to the pack delete forbidden response
func (o *PackDeleteForbidden) WithPayload(payload *models.GeneralError) *PackDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack delete forbidden response
func (o *PackDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PackDeleteDefault Some error unrelated to the handler

swagger:response packDeleteDefault
*/
type PackDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackDeleteDefault creates PackDeleteDefault with default headers values
func NewPackDeleteDefault(code int) *PackDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &PackDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pack delete default response
func (o *PackDeleteDefault) WithStatusCode(code int) *PackDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pack delete default response
func (o *PackDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pack delete default response
func (o *PackDeleteDefault) WithPayload(payload *models.GeneralError) *PackDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack delete default response
func (o *PackDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
