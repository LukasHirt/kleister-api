// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// BuildCreateOKCode is the HTTP code returned for type BuildCreateOK
const BuildCreateOKCode int = 200

/*BuildCreateOK The created build data

swagger:response buildCreateOK
*/
type BuildCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Build `json:"body,omitempty"`
}

// NewBuildCreateOK creates BuildCreateOK with default headers values
func NewBuildCreateOK() *BuildCreateOK {

	return &BuildCreateOK{}
}

// WithPayload adds the payload to the build create o k response
func (o *BuildCreateOK) WithPayload(payload *models.Build) *BuildCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build create o k response
func (o *BuildCreateOK) SetPayload(payload *models.Build) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BuildCreateForbiddenCode is the HTTP code returned for type BuildCreateForbidden
const BuildCreateForbiddenCode int = 403

/*BuildCreateForbidden User is not authorized

swagger:response buildCreateForbidden
*/
type BuildCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewBuildCreateForbidden creates BuildCreateForbidden with default headers values
func NewBuildCreateForbidden() *BuildCreateForbidden {

	return &BuildCreateForbidden{}
}

// WithPayload adds the payload to the build create forbidden response
func (o *BuildCreateForbidden) WithPayload(payload *models.GeneralError) *BuildCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build create forbidden response
func (o *BuildCreateForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BuildCreatePreconditionFailedCode is the HTTP code returned for type BuildCreatePreconditionFailed
const BuildCreatePreconditionFailedCode int = 412

/*BuildCreatePreconditionFailed Failed to parse request body

swagger:response buildCreatePreconditionFailed
*/
type BuildCreatePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewBuildCreatePreconditionFailed creates BuildCreatePreconditionFailed with default headers values
func NewBuildCreatePreconditionFailed() *BuildCreatePreconditionFailed {

	return &BuildCreatePreconditionFailed{}
}

// WithPayload adds the payload to the build create precondition failed response
func (o *BuildCreatePreconditionFailed) WithPayload(payload *models.GeneralError) *BuildCreatePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build create precondition failed response
func (o *BuildCreatePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildCreatePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BuildCreateUnprocessableEntityCode is the HTTP code returned for type BuildCreateUnprocessableEntity
const BuildCreateUnprocessableEntityCode int = 422

/*BuildCreateUnprocessableEntity Failed to validate request

swagger:response buildCreateUnprocessableEntity
*/
type BuildCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewBuildCreateUnprocessableEntity creates BuildCreateUnprocessableEntity with default headers values
func NewBuildCreateUnprocessableEntity() *BuildCreateUnprocessableEntity {

	return &BuildCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the build create unprocessable entity response
func (o *BuildCreateUnprocessableEntity) WithPayload(payload *models.ValidationError) *BuildCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build create unprocessable entity response
func (o *BuildCreateUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BuildCreateDefault Some error unrelated to the handler

swagger:response buildCreateDefault
*/
type BuildCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewBuildCreateDefault creates BuildCreateDefault with default headers values
func NewBuildCreateDefault(code int) *BuildCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &BuildCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the build create default response
func (o *BuildCreateDefault) WithStatusCode(code int) *BuildCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the build create default response
func (o *BuildCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the build create default response
func (o *BuildCreateDefault) WithPayload(payload *models.GeneralError) *BuildCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build create default response
func (o *BuildCreateDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
