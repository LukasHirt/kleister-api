// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PackShowHandlerFunc turns a function with the right signature into a pack show handler
type PackShowHandlerFunc func(PackShowParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PackShowHandlerFunc) Handle(params PackShowParams) middleware.Responder {
	return fn(params)
}

// PackShowHandler interface for that can handle valid pack show params
type PackShowHandler interface {
	Handle(PackShowParams) middleware.Responder
}

// NewPackShow creates a new http.Handler for the pack show operation
func NewPackShow(ctx *middleware.Context, handler PackShowHandler) *PackShow {
	return &PackShow{Context: ctx, Handler: handler}
}

/*PackShow swagger:route GET /packs/{packID} pack packShow

Fetch a specific pack

*/
type PackShow struct {
	Context *middleware.Context
	Handler PackShowHandler
}

func (o *PackShow) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPackShowParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
