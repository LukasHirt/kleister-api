// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// AppendBuildToVersionOKCode is the HTTP code returned for type AppendBuildToVersionOK
const AppendBuildToVersionOKCode int = 200

/*AppendBuildToVersionOK Plain success message

swagger:response appendBuildToVersionOK
*/
type AppendBuildToVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendBuildToVersionOK creates AppendBuildToVersionOK with default headers values
func NewAppendBuildToVersionOK() *AppendBuildToVersionOK {

	return &AppendBuildToVersionOK{}
}

// WithPayload adds the payload to the append build to version o k response
func (o *AppendBuildToVersionOK) WithPayload(payload *models.GeneralError) *AppendBuildToVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version o k response
func (o *AppendBuildToVersionOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendBuildToVersionForbiddenCode is the HTTP code returned for type AppendBuildToVersionForbidden
const AppendBuildToVersionForbiddenCode int = 403

/*AppendBuildToVersionForbidden User is not authorized

swagger:response appendBuildToVersionForbidden
*/
type AppendBuildToVersionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendBuildToVersionForbidden creates AppendBuildToVersionForbidden with default headers values
func NewAppendBuildToVersionForbidden() *AppendBuildToVersionForbidden {

	return &AppendBuildToVersionForbidden{}
}

// WithPayload adds the payload to the append build to version forbidden response
func (o *AppendBuildToVersionForbidden) WithPayload(payload *models.GeneralError) *AppendBuildToVersionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version forbidden response
func (o *AppendBuildToVersionForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendBuildToVersionNotFoundCode is the HTTP code returned for type AppendBuildToVersionNotFound
const AppendBuildToVersionNotFoundCode int = 404

/*AppendBuildToVersionNotFound Build or pack not found

swagger:response appendBuildToVersionNotFound
*/
type AppendBuildToVersionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendBuildToVersionNotFound creates AppendBuildToVersionNotFound with default headers values
func NewAppendBuildToVersionNotFound() *AppendBuildToVersionNotFound {

	return &AppendBuildToVersionNotFound{}
}

// WithPayload adds the payload to the append build to version not found response
func (o *AppendBuildToVersionNotFound) WithPayload(payload *models.GeneralError) *AppendBuildToVersionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version not found response
func (o *AppendBuildToVersionNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendBuildToVersionPreconditionFailedCode is the HTTP code returned for type AppendBuildToVersionPreconditionFailed
const AppendBuildToVersionPreconditionFailedCode int = 412

/*AppendBuildToVersionPreconditionFailed Version is already assigned

swagger:response appendBuildToVersionPreconditionFailed
*/
type AppendBuildToVersionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendBuildToVersionPreconditionFailed creates AppendBuildToVersionPreconditionFailed with default headers values
func NewAppendBuildToVersionPreconditionFailed() *AppendBuildToVersionPreconditionFailed {

	return &AppendBuildToVersionPreconditionFailed{}
}

// WithPayload adds the payload to the append build to version precondition failed response
func (o *AppendBuildToVersionPreconditionFailed) WithPayload(payload *models.GeneralError) *AppendBuildToVersionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version precondition failed response
func (o *AppendBuildToVersionPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendBuildToVersionUnprocessableEntityCode is the HTTP code returned for type AppendBuildToVersionUnprocessableEntity
const AppendBuildToVersionUnprocessableEntityCode int = 422

/*AppendBuildToVersionUnprocessableEntity Failed to validate request

swagger:response appendBuildToVersionUnprocessableEntity
*/
type AppendBuildToVersionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewAppendBuildToVersionUnprocessableEntity creates AppendBuildToVersionUnprocessableEntity with default headers values
func NewAppendBuildToVersionUnprocessableEntity() *AppendBuildToVersionUnprocessableEntity {

	return &AppendBuildToVersionUnprocessableEntity{}
}

// WithPayload adds the payload to the append build to version unprocessable entity response
func (o *AppendBuildToVersionUnprocessableEntity) WithPayload(payload *models.ValidationError) *AppendBuildToVersionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version unprocessable entity response
func (o *AppendBuildToVersionUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AppendBuildToVersionDefault Some error unrelated to the handler

swagger:response appendBuildToVersionDefault
*/
type AppendBuildToVersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendBuildToVersionDefault creates AppendBuildToVersionDefault with default headers values
func NewAppendBuildToVersionDefault(code int) *AppendBuildToVersionDefault {
	if code <= 0 {
		code = 500
	}

	return &AppendBuildToVersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the append build to version default response
func (o *AppendBuildToVersionDefault) WithStatusCode(code int) *AppendBuildToVersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the append build to version default response
func (o *AppendBuildToVersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the append build to version default response
func (o *AppendBuildToVersionDefault) WithPayload(payload *models.GeneralError) *AppendBuildToVersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append build to version default response
func (o *AppendBuildToVersionDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendBuildToVersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
