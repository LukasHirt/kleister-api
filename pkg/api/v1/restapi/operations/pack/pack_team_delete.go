// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PackTeamDeleteHandlerFunc turns a function with the right signature into a pack team delete handler
type PackTeamDeleteHandlerFunc func(PackTeamDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PackTeamDeleteHandlerFunc) Handle(params PackTeamDeleteParams) middleware.Responder {
	return fn(params)
}

// PackTeamDeleteHandler interface for that can handle valid pack team delete params
type PackTeamDeleteHandler interface {
	Handle(PackTeamDeleteParams) middleware.Responder
}

// NewPackTeamDelete creates a new http.Handler for the pack team delete operation
func NewPackTeamDelete(ctx *middleware.Context, handler PackTeamDeleteHandler) *PackTeamDelete {
	return &PackTeamDelete{Context: ctx, Handler: handler}
}

/*PackTeamDelete swagger:route DELETE /packs/{packID}/teams pack packTeamDelete

Remove a team from pack

*/
type PackTeamDelete struct {
	Context *middleware.Context
	Handler PackTeamDeleteHandler
}

func (o *PackTeamDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPackTeamDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
