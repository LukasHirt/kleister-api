// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// PackIndexOKCode is the HTTP code returned for type PackIndexOK
const PackIndexOKCode int = 200

/*PackIndexOK A collection of packs

swagger:response packIndexOK
*/
type PackIndexOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Pack `json:"body,omitempty"`
}

// NewPackIndexOK creates PackIndexOK with default headers values
func NewPackIndexOK() *PackIndexOK {

	return &PackIndexOK{}
}

// WithPayload adds the payload to the pack index o k response
func (o *PackIndexOK) WithPayload(payload []*models.Pack) *PackIndexOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack index o k response
func (o *PackIndexOK) SetPayload(payload []*models.Pack) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackIndexOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Pack, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PackIndexForbiddenCode is the HTTP code returned for type PackIndexForbidden
const PackIndexForbiddenCode int = 403

/*PackIndexForbidden User is not authorized

swagger:response packIndexForbidden
*/
type PackIndexForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackIndexForbidden creates PackIndexForbidden with default headers values
func NewPackIndexForbidden() *PackIndexForbidden {

	return &PackIndexForbidden{}
}

// WithPayload adds the payload to the pack index forbidden response
func (o *PackIndexForbidden) WithPayload(payload *models.GeneralError) *PackIndexForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack index forbidden response
func (o *PackIndexForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackIndexForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PackIndexDefault Some error unrelated to the handler

swagger:response packIndexDefault
*/
type PackIndexDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPackIndexDefault creates PackIndexDefault with default headers values
func NewPackIndexDefault(code int) *PackIndexDefault {
	if code <= 0 {
		code = 500
	}

	return &PackIndexDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pack index default response
func (o *PackIndexDefault) WithStatusCode(code int) *PackIndexDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pack index default response
func (o *PackIndexDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pack index default response
func (o *PackIndexDefault) WithPayload(payload *models.GeneralError) *PackIndexDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pack index default response
func (o *PackIndexDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PackIndexDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
