// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// BuildVersionIndexOKCode is the HTTP code returned for type BuildVersionIndexOK
const BuildVersionIndexOKCode int = 200

/*BuildVersionIndexOK A collection of build versions

swagger:response buildVersionIndexOK
*/
type BuildVersionIndexOK struct {

	/*
	  In: Body
	*/
	Payload []*models.BuildVersion `json:"body,omitempty"`
}

// NewBuildVersionIndexOK creates BuildVersionIndexOK with default headers values
func NewBuildVersionIndexOK() *BuildVersionIndexOK {

	return &BuildVersionIndexOK{}
}

// WithPayload adds the payload to the build version index o k response
func (o *BuildVersionIndexOK) WithPayload(payload []*models.BuildVersion) *BuildVersionIndexOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build version index o k response
func (o *BuildVersionIndexOK) SetPayload(payload []*models.BuildVersion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildVersionIndexOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.BuildVersion, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// BuildVersionIndexForbiddenCode is the HTTP code returned for type BuildVersionIndexForbidden
const BuildVersionIndexForbiddenCode int = 403

/*BuildVersionIndexForbidden User is not authorized

swagger:response buildVersionIndexForbidden
*/
type BuildVersionIndexForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewBuildVersionIndexForbidden creates BuildVersionIndexForbidden with default headers values
func NewBuildVersionIndexForbidden() *BuildVersionIndexForbidden {

	return &BuildVersionIndexForbidden{}
}

// WithPayload adds the payload to the build version index forbidden response
func (o *BuildVersionIndexForbidden) WithPayload(payload *models.GeneralError) *BuildVersionIndexForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build version index forbidden response
func (o *BuildVersionIndexForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildVersionIndexForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BuildVersionIndexDefault Some error unrelated to the handler

swagger:response buildVersionIndexDefault
*/
type BuildVersionIndexDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewBuildVersionIndexDefault creates BuildVersionIndexDefault with default headers values
func NewBuildVersionIndexDefault(code int) *BuildVersionIndexDefault {
	if code <= 0 {
		code = 500
	}

	return &BuildVersionIndexDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the build version index default response
func (o *BuildVersionIndexDefault) WithStatusCode(code int) *BuildVersionIndexDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the build version index default response
func (o *BuildVersionIndexDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the build version index default response
func (o *BuildVersionIndexDefault) WithPayload(payload *models.GeneralError) *BuildVersionIndexDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build version index default response
func (o *BuildVersionIndexDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildVersionIndexDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
