// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeletePackFromTeamOKCode is the HTTP code returned for type DeletePackFromTeamOK
const DeletePackFromTeamOKCode int = 200

/*DeletePackFromTeamOK Plain success message

swagger:response deletePackFromTeamOK
*/
type DeletePackFromTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromTeamOK creates DeletePackFromTeamOK with default headers values
func NewDeletePackFromTeamOK() *DeletePackFromTeamOK {

	return &DeletePackFromTeamOK{}
}

// WithPayload adds the payload to the delete pack from team o k response
func (o *DeletePackFromTeamOK) WithPayload(payload *models.GeneralError) *DeletePackFromTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from team o k response
func (o *DeletePackFromTeamOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromTeamForbiddenCode is the HTTP code returned for type DeletePackFromTeamForbidden
const DeletePackFromTeamForbiddenCode int = 403

/*DeletePackFromTeamForbidden User is not authorized

swagger:response deletePackFromTeamForbidden
*/
type DeletePackFromTeamForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromTeamForbidden creates DeletePackFromTeamForbidden with default headers values
func NewDeletePackFromTeamForbidden() *DeletePackFromTeamForbidden {

	return &DeletePackFromTeamForbidden{}
}

// WithPayload adds the payload to the delete pack from team forbidden response
func (o *DeletePackFromTeamForbidden) WithPayload(payload *models.GeneralError) *DeletePackFromTeamForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from team forbidden response
func (o *DeletePackFromTeamForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromTeamForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromTeamPreconditionFailedCode is the HTTP code returned for type DeletePackFromTeamPreconditionFailed
const DeletePackFromTeamPreconditionFailedCode int = 412

/*DeletePackFromTeamPreconditionFailed Failed to parse request body

swagger:response deletePackFromTeamPreconditionFailed
*/
type DeletePackFromTeamPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromTeamPreconditionFailed creates DeletePackFromTeamPreconditionFailed with default headers values
func NewDeletePackFromTeamPreconditionFailed() *DeletePackFromTeamPreconditionFailed {

	return &DeletePackFromTeamPreconditionFailed{}
}

// WithPayload adds the payload to the delete pack from team precondition failed response
func (o *DeletePackFromTeamPreconditionFailed) WithPayload(payload *models.GeneralError) *DeletePackFromTeamPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from team precondition failed response
func (o *DeletePackFromTeamPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromTeamPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePackFromTeamUnprocessableEntityCode is the HTTP code returned for type DeletePackFromTeamUnprocessableEntity
const DeletePackFromTeamUnprocessableEntityCode int = 422

/*DeletePackFromTeamUnprocessableEntity Team is not assigned

swagger:response deletePackFromTeamUnprocessableEntity
*/
type DeletePackFromTeamUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromTeamUnprocessableEntity creates DeletePackFromTeamUnprocessableEntity with default headers values
func NewDeletePackFromTeamUnprocessableEntity() *DeletePackFromTeamUnprocessableEntity {

	return &DeletePackFromTeamUnprocessableEntity{}
}

// WithPayload adds the payload to the delete pack from team unprocessable entity response
func (o *DeletePackFromTeamUnprocessableEntity) WithPayload(payload *models.GeneralError) *DeletePackFromTeamUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from team unprocessable entity response
func (o *DeletePackFromTeamUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromTeamUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeletePackFromTeamDefault Some error unrelated to the handler

swagger:response deletePackFromTeamDefault
*/
type DeletePackFromTeamDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeletePackFromTeamDefault creates DeletePackFromTeamDefault with default headers values
func NewDeletePackFromTeamDefault(code int) *DeletePackFromTeamDefault {
	if code <= 0 {
		code = 500
	}

	return &DeletePackFromTeamDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete pack from team default response
func (o *DeletePackFromTeamDefault) WithStatusCode(code int) *DeletePackFromTeamDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete pack from team default response
func (o *DeletePackFromTeamDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete pack from team default response
func (o *DeletePackFromTeamDefault) WithPayload(payload *models.GeneralError) *DeletePackFromTeamDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pack from team default response
func (o *DeletePackFromTeamDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePackFromTeamDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
