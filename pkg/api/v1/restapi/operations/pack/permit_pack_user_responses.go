// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// PermitPackUserOKCode is the HTTP code returned for type PermitPackUserOK
const PermitPackUserOKCode int = 200

/*PermitPackUserOK Plain success message

swagger:response permitPackUserOK
*/
type PermitPackUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitPackUserOK creates PermitPackUserOK with default headers values
func NewPermitPackUserOK() *PermitPackUserOK {

	return &PermitPackUserOK{}
}

// WithPayload adds the payload to the permit pack user o k response
func (o *PermitPackUserOK) WithPayload(payload *models.GeneralError) *PermitPackUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit pack user o k response
func (o *PermitPackUserOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitPackUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitPackUserForbiddenCode is the HTTP code returned for type PermitPackUserForbidden
const PermitPackUserForbiddenCode int = 403

/*PermitPackUserForbidden User is not authorized

swagger:response permitPackUserForbidden
*/
type PermitPackUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitPackUserForbidden creates PermitPackUserForbidden with default headers values
func NewPermitPackUserForbidden() *PermitPackUserForbidden {

	return &PermitPackUserForbidden{}
}

// WithPayload adds the payload to the permit pack user forbidden response
func (o *PermitPackUserForbidden) WithPayload(payload *models.GeneralError) *PermitPackUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit pack user forbidden response
func (o *PermitPackUserForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitPackUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitPackUserPreconditionFailedCode is the HTTP code returned for type PermitPackUserPreconditionFailed
const PermitPackUserPreconditionFailedCode int = 412

/*PermitPackUserPreconditionFailed Failed to parse request body

swagger:response permitPackUserPreconditionFailed
*/
type PermitPackUserPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitPackUserPreconditionFailed creates PermitPackUserPreconditionFailed with default headers values
func NewPermitPackUserPreconditionFailed() *PermitPackUserPreconditionFailed {

	return &PermitPackUserPreconditionFailed{}
}

// WithPayload adds the payload to the permit pack user precondition failed response
func (o *PermitPackUserPreconditionFailed) WithPayload(payload *models.GeneralError) *PermitPackUserPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit pack user precondition failed response
func (o *PermitPackUserPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitPackUserPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PermitPackUserUnprocessableEntityCode is the HTTP code returned for type PermitPackUserUnprocessableEntity
const PermitPackUserUnprocessableEntityCode int = 422

/*PermitPackUserUnprocessableEntity User is not assigned

swagger:response permitPackUserUnprocessableEntity
*/
type PermitPackUserUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitPackUserUnprocessableEntity creates PermitPackUserUnprocessableEntity with default headers values
func NewPermitPackUserUnprocessableEntity() *PermitPackUserUnprocessableEntity {

	return &PermitPackUserUnprocessableEntity{}
}

// WithPayload adds the payload to the permit pack user unprocessable entity response
func (o *PermitPackUserUnprocessableEntity) WithPayload(payload *models.GeneralError) *PermitPackUserUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit pack user unprocessable entity response
func (o *PermitPackUserUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitPackUserUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PermitPackUserDefault Some error unrelated to the handler

swagger:response permitPackUserDefault
*/
type PermitPackUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewPermitPackUserDefault creates PermitPackUserDefault with default headers values
func NewPermitPackUserDefault(code int) *PermitPackUserDefault {
	if code <= 0 {
		code = 500
	}

	return &PermitPackUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the permit pack user default response
func (o *PermitPackUserDefault) WithStatusCode(code int) *PermitPackUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the permit pack user default response
func (o *PermitPackUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the permit pack user default response
func (o *PermitPackUserDefault) WithPayload(payload *models.GeneralError) *PermitPackUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the permit pack user default response
func (o *PermitPackUserDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PermitPackUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
