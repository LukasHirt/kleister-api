// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// MinecraftBuildAppendOKCode is the HTTP code returned for type MinecraftBuildAppendOK
const MinecraftBuildAppendOKCode int = 200

/*MinecraftBuildAppendOK A collection of assigned builds

swagger:response minecraftBuildAppendOK
*/
type MinecraftBuildAppendOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Build `json:"body,omitempty"`
}

// NewMinecraftBuildAppendOK creates MinecraftBuildAppendOK with default headers values
func NewMinecraftBuildAppendOK() *MinecraftBuildAppendOK {

	return &MinecraftBuildAppendOK{}
}

// WithPayload adds the payload to the minecraft build append o k response
func (o *MinecraftBuildAppendOK) WithPayload(payload []*models.Build) *MinecraftBuildAppendOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft build append o k response
func (o *MinecraftBuildAppendOK) SetPayload(payload []*models.Build) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftBuildAppendOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Build, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// MinecraftBuildAppendForbiddenCode is the HTTP code returned for type MinecraftBuildAppendForbidden
const MinecraftBuildAppendForbiddenCode int = 403

/*MinecraftBuildAppendForbidden User is not authorized

swagger:response minecraftBuildAppendForbidden
*/
type MinecraftBuildAppendForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftBuildAppendForbidden creates MinecraftBuildAppendForbidden with default headers values
func NewMinecraftBuildAppendForbidden() *MinecraftBuildAppendForbidden {

	return &MinecraftBuildAppendForbidden{}
}

// WithPayload adds the payload to the minecraft build append forbidden response
func (o *MinecraftBuildAppendForbidden) WithPayload(payload *models.GeneralError) *MinecraftBuildAppendForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft build append forbidden response
func (o *MinecraftBuildAppendForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftBuildAppendForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MinecraftBuildAppendPreconditionFailedCode is the HTTP code returned for type MinecraftBuildAppendPreconditionFailed
const MinecraftBuildAppendPreconditionFailedCode int = 412

/*MinecraftBuildAppendPreconditionFailed Failed to parse request body

swagger:response minecraftBuildAppendPreconditionFailed
*/
type MinecraftBuildAppendPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftBuildAppendPreconditionFailed creates MinecraftBuildAppendPreconditionFailed with default headers values
func NewMinecraftBuildAppendPreconditionFailed() *MinecraftBuildAppendPreconditionFailed {

	return &MinecraftBuildAppendPreconditionFailed{}
}

// WithPayload adds the payload to the minecraft build append precondition failed response
func (o *MinecraftBuildAppendPreconditionFailed) WithPayload(payload *models.GeneralError) *MinecraftBuildAppendPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft build append precondition failed response
func (o *MinecraftBuildAppendPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftBuildAppendPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MinecraftBuildAppendUnprocessableEntityCode is the HTTP code returned for type MinecraftBuildAppendUnprocessableEntity
const MinecraftBuildAppendUnprocessableEntityCode int = 422

/*MinecraftBuildAppendUnprocessableEntity Build is already appended

swagger:response minecraftBuildAppendUnprocessableEntity
*/
type MinecraftBuildAppendUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewMinecraftBuildAppendUnprocessableEntity creates MinecraftBuildAppendUnprocessableEntity with default headers values
func NewMinecraftBuildAppendUnprocessableEntity() *MinecraftBuildAppendUnprocessableEntity {

	return &MinecraftBuildAppendUnprocessableEntity{}
}

// WithPayload adds the payload to the minecraft build append unprocessable entity response
func (o *MinecraftBuildAppendUnprocessableEntity) WithPayload(payload *models.ValidationError) *MinecraftBuildAppendUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft build append unprocessable entity response
func (o *MinecraftBuildAppendUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftBuildAppendUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*MinecraftBuildAppendDefault Some error unrelated to the handler

swagger:response minecraftBuildAppendDefault
*/
type MinecraftBuildAppendDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftBuildAppendDefault creates MinecraftBuildAppendDefault with default headers values
func NewMinecraftBuildAppendDefault(code int) *MinecraftBuildAppendDefault {
	if code <= 0 {
		code = 500
	}

	return &MinecraftBuildAppendDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the minecraft build append default response
func (o *MinecraftBuildAppendDefault) WithStatusCode(code int) *MinecraftBuildAppendDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the minecraft build append default response
func (o *MinecraftBuildAppendDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the minecraft build append default response
func (o *MinecraftBuildAppendDefault) WithPayload(payload *models.GeneralError) *MinecraftBuildAppendDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft build append default response
func (o *MinecraftBuildAppendDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftBuildAppendDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
