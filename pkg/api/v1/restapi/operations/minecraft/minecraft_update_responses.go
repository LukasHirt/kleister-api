// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// MinecraftUpdateOKCode is the HTTP code returned for type MinecraftUpdateOK
const MinecraftUpdateOKCode int = 200

/*MinecraftUpdateOK Plain success message

swagger:response minecraftUpdateOK
*/
type MinecraftUpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftUpdateOK creates MinecraftUpdateOK with default headers values
func NewMinecraftUpdateOK() *MinecraftUpdateOK {

	return &MinecraftUpdateOK{}
}

// WithPayload adds the payload to the minecraft update o k response
func (o *MinecraftUpdateOK) WithPayload(payload *models.GeneralError) *MinecraftUpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft update o k response
func (o *MinecraftUpdateOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MinecraftUpdateForbiddenCode is the HTTP code returned for type MinecraftUpdateForbidden
const MinecraftUpdateForbiddenCode int = 403

/*MinecraftUpdateForbidden User is not authorized

swagger:response minecraftUpdateForbidden
*/
type MinecraftUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftUpdateForbidden creates MinecraftUpdateForbidden with default headers values
func NewMinecraftUpdateForbidden() *MinecraftUpdateForbidden {

	return &MinecraftUpdateForbidden{}
}

// WithPayload adds the payload to the minecraft update forbidden response
func (o *MinecraftUpdateForbidden) WithPayload(payload *models.GeneralError) *MinecraftUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft update forbidden response
func (o *MinecraftUpdateForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MinecraftUpdateServiceUnavailableCode is the HTTP code returned for type MinecraftUpdateServiceUnavailable
const MinecraftUpdateServiceUnavailableCode int = 503

/*MinecraftUpdateServiceUnavailable If remote source is not available

swagger:response minecraftUpdateServiceUnavailable
*/
type MinecraftUpdateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftUpdateServiceUnavailable creates MinecraftUpdateServiceUnavailable with default headers values
func NewMinecraftUpdateServiceUnavailable() *MinecraftUpdateServiceUnavailable {

	return &MinecraftUpdateServiceUnavailable{}
}

// WithPayload adds the payload to the minecraft update service unavailable response
func (o *MinecraftUpdateServiceUnavailable) WithPayload(payload *models.GeneralError) *MinecraftUpdateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft update service unavailable response
func (o *MinecraftUpdateServiceUnavailable) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftUpdateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*MinecraftUpdateDefault Some error unrelated to the handler

swagger:response minecraftUpdateDefault
*/
type MinecraftUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewMinecraftUpdateDefault creates MinecraftUpdateDefault with default headers values
func NewMinecraftUpdateDefault(code int) *MinecraftUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &MinecraftUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the minecraft update default response
func (o *MinecraftUpdateDefault) WithStatusCode(code int) *MinecraftUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the minecraft update default response
func (o *MinecraftUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the minecraft update default response
func (o *MinecraftUpdateDefault) WithPayload(payload *models.GeneralError) *MinecraftUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the minecraft update default response
func (o *MinecraftUpdateDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MinecraftUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
