// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// UpdateMinecraftOKCode is the HTTP code returned for type UpdateMinecraftOK
const UpdateMinecraftOKCode int = 200

/*UpdateMinecraftOK Plain success message

swagger:response updateMinecraftOK
*/
type UpdateMinecraftOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateMinecraftOK creates UpdateMinecraftOK with default headers values
func NewUpdateMinecraftOK() *UpdateMinecraftOK {

	return &UpdateMinecraftOK{}
}

// WithPayload adds the payload to the update minecraft o k response
func (o *UpdateMinecraftOK) WithPayload(payload *models.GeneralError) *UpdateMinecraftOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update minecraft o k response
func (o *UpdateMinecraftOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMinecraftOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMinecraftForbiddenCode is the HTTP code returned for type UpdateMinecraftForbidden
const UpdateMinecraftForbiddenCode int = 403

/*UpdateMinecraftForbidden User is not authorized

swagger:response updateMinecraftForbidden
*/
type UpdateMinecraftForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateMinecraftForbidden creates UpdateMinecraftForbidden with default headers values
func NewUpdateMinecraftForbidden() *UpdateMinecraftForbidden {

	return &UpdateMinecraftForbidden{}
}

// WithPayload adds the payload to the update minecraft forbidden response
func (o *UpdateMinecraftForbidden) WithPayload(payload *models.GeneralError) *UpdateMinecraftForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update minecraft forbidden response
func (o *UpdateMinecraftForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMinecraftForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMinecraftServiceUnavailableCode is the HTTP code returned for type UpdateMinecraftServiceUnavailable
const UpdateMinecraftServiceUnavailableCode int = 503

/*UpdateMinecraftServiceUnavailable If remote source is not available

swagger:response updateMinecraftServiceUnavailable
*/
type UpdateMinecraftServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateMinecraftServiceUnavailable creates UpdateMinecraftServiceUnavailable with default headers values
func NewUpdateMinecraftServiceUnavailable() *UpdateMinecraftServiceUnavailable {

	return &UpdateMinecraftServiceUnavailable{}
}

// WithPayload adds the payload to the update minecraft service unavailable response
func (o *UpdateMinecraftServiceUnavailable) WithPayload(payload *models.GeneralError) *UpdateMinecraftServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update minecraft service unavailable response
func (o *UpdateMinecraftServiceUnavailable) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMinecraftServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateMinecraftDefault Some error unrelated to the handler

swagger:response updateMinecraftDefault
*/
type UpdateMinecraftDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUpdateMinecraftDefault creates UpdateMinecraftDefault with default headers values
func NewUpdateMinecraftDefault(code int) *UpdateMinecraftDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateMinecraftDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update minecraft default response
func (o *UpdateMinecraftDefault) WithStatusCode(code int) *UpdateMinecraftDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update minecraft default response
func (o *UpdateMinecraftDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update minecraft default response
func (o *UpdateMinecraftDefault) WithPayload(payload *models.GeneralError) *UpdateMinecraftDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update minecraft default response
func (o *UpdateMinecraftDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMinecraftDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
