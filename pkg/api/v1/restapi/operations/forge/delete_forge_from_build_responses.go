// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeleteForgeFromBuildOKCode is the HTTP code returned for type DeleteForgeFromBuildOK
const DeleteForgeFromBuildOKCode int = 200

/*DeleteForgeFromBuildOK A collection of assigned builds

swagger:response deleteForgeFromBuildOK
*/
type DeleteForgeFromBuildOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Build `json:"body,omitempty"`
}

// NewDeleteForgeFromBuildOK creates DeleteForgeFromBuildOK with default headers values
func NewDeleteForgeFromBuildOK() *DeleteForgeFromBuildOK {

	return &DeleteForgeFromBuildOK{}
}

// WithPayload adds the payload to the delete forge from build o k response
func (o *DeleteForgeFromBuildOK) WithPayload(payload []*models.Build) *DeleteForgeFromBuildOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forge from build o k response
func (o *DeleteForgeFromBuildOK) SetPayload(payload []*models.Build) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForgeFromBuildOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Build, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteForgeFromBuildForbiddenCode is the HTTP code returned for type DeleteForgeFromBuildForbidden
const DeleteForgeFromBuildForbiddenCode int = 403

/*DeleteForgeFromBuildForbidden User is not authorized

swagger:response deleteForgeFromBuildForbidden
*/
type DeleteForgeFromBuildForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteForgeFromBuildForbidden creates DeleteForgeFromBuildForbidden with default headers values
func NewDeleteForgeFromBuildForbidden() *DeleteForgeFromBuildForbidden {

	return &DeleteForgeFromBuildForbidden{}
}

// WithPayload adds the payload to the delete forge from build forbidden response
func (o *DeleteForgeFromBuildForbidden) WithPayload(payload *models.GeneralError) *DeleteForgeFromBuildForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forge from build forbidden response
func (o *DeleteForgeFromBuildForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForgeFromBuildForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteForgeFromBuildNotFoundCode is the HTTP code returned for type DeleteForgeFromBuildNotFound
const DeleteForgeFromBuildNotFoundCode int = 404

/*DeleteForgeFromBuildNotFound Forge or build not found

swagger:response deleteForgeFromBuildNotFound
*/
type DeleteForgeFromBuildNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteForgeFromBuildNotFound creates DeleteForgeFromBuildNotFound with default headers values
func NewDeleteForgeFromBuildNotFound() *DeleteForgeFromBuildNotFound {

	return &DeleteForgeFromBuildNotFound{}
}

// WithPayload adds the payload to the delete forge from build not found response
func (o *DeleteForgeFromBuildNotFound) WithPayload(payload *models.GeneralError) *DeleteForgeFromBuildNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forge from build not found response
func (o *DeleteForgeFromBuildNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForgeFromBuildNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteForgeFromBuildPreconditionFailedCode is the HTTP code returned for type DeleteForgeFromBuildPreconditionFailed
const DeleteForgeFromBuildPreconditionFailedCode int = 412

/*DeleteForgeFromBuildPreconditionFailed Build is not assigned

swagger:response deleteForgeFromBuildPreconditionFailed
*/
type DeleteForgeFromBuildPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteForgeFromBuildPreconditionFailed creates DeleteForgeFromBuildPreconditionFailed with default headers values
func NewDeleteForgeFromBuildPreconditionFailed() *DeleteForgeFromBuildPreconditionFailed {

	return &DeleteForgeFromBuildPreconditionFailed{}
}

// WithPayload adds the payload to the delete forge from build precondition failed response
func (o *DeleteForgeFromBuildPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteForgeFromBuildPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forge from build precondition failed response
func (o *DeleteForgeFromBuildPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForgeFromBuildPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteForgeFromBuildDefault Some error unrelated to the handler

swagger:response deleteForgeFromBuildDefault
*/
type DeleteForgeFromBuildDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteForgeFromBuildDefault creates DeleteForgeFromBuildDefault with default headers values
func NewDeleteForgeFromBuildDefault(code int) *DeleteForgeFromBuildDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteForgeFromBuildDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete forge from build default response
func (o *DeleteForgeFromBuildDefault) WithStatusCode(code int) *DeleteForgeFromBuildDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete forge from build default response
func (o *DeleteForgeFromBuildDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete forge from build default response
func (o *DeleteForgeFromBuildDefault) WithPayload(payload *models.GeneralError) *DeleteForgeFromBuildDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forge from build default response
func (o *DeleteForgeFromBuildDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForgeFromBuildDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
