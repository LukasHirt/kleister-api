// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ForgeIndexOKCode is the HTTP code returned for type ForgeIndexOK
const ForgeIndexOKCode int = 200

/*ForgeIndexOK A collection of Forge versions

swagger:response forgeIndexOK
*/
type ForgeIndexOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Forge `json:"body,omitempty"`
}

// NewForgeIndexOK creates ForgeIndexOK with default headers values
func NewForgeIndexOK() *ForgeIndexOK {

	return &ForgeIndexOK{}
}

// WithPayload adds the payload to the forge index o k response
func (o *ForgeIndexOK) WithPayload(payload []*models.Forge) *ForgeIndexOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge index o k response
func (o *ForgeIndexOK) SetPayload(payload []*models.Forge) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeIndexOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Forge, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ForgeIndexForbiddenCode is the HTTP code returned for type ForgeIndexForbidden
const ForgeIndexForbiddenCode int = 403

/*ForgeIndexForbidden User is not authorized

swagger:response forgeIndexForbidden
*/
type ForgeIndexForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeIndexForbidden creates ForgeIndexForbidden with default headers values
func NewForgeIndexForbidden() *ForgeIndexForbidden {

	return &ForgeIndexForbidden{}
}

// WithPayload adds the payload to the forge index forbidden response
func (o *ForgeIndexForbidden) WithPayload(payload *models.GeneralError) *ForgeIndexForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge index forbidden response
func (o *ForgeIndexForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeIndexForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ForgeIndexDefault Some error unrelated to the handler

swagger:response forgeIndexDefault
*/
type ForgeIndexDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeIndexDefault creates ForgeIndexDefault with default headers values
func NewForgeIndexDefault(code int) *ForgeIndexDefault {
	if code <= 0 {
		code = 500
	}

	return &ForgeIndexDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the forge index default response
func (o *ForgeIndexDefault) WithStatusCode(code int) *ForgeIndexDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the forge index default response
func (o *ForgeIndexDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the forge index default response
func (o *ForgeIndexDefault) WithPayload(payload *models.GeneralError) *ForgeIndexDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge index default response
func (o *ForgeIndexDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeIndexDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
