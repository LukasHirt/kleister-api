// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// AppendForgeToBuildOKCode is the HTTP code returned for type AppendForgeToBuildOK
const AppendForgeToBuildOKCode int = 200

/*AppendForgeToBuildOK A collection of assigned builds

swagger:response appendForgeToBuildOK
*/
type AppendForgeToBuildOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Build `json:"body,omitempty"`
}

// NewAppendForgeToBuildOK creates AppendForgeToBuildOK with default headers values
func NewAppendForgeToBuildOK() *AppendForgeToBuildOK {

	return &AppendForgeToBuildOK{}
}

// WithPayload adds the payload to the append forge to build o k response
func (o *AppendForgeToBuildOK) WithPayload(payload []*models.Build) *AppendForgeToBuildOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append forge to build o k response
func (o *AppendForgeToBuildOK) SetPayload(payload []*models.Build) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendForgeToBuildOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Build, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// AppendForgeToBuildForbiddenCode is the HTTP code returned for type AppendForgeToBuildForbidden
const AppendForgeToBuildForbiddenCode int = 403

/*AppendForgeToBuildForbidden User is not authorized

swagger:response appendForgeToBuildForbidden
*/
type AppendForgeToBuildForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendForgeToBuildForbidden creates AppendForgeToBuildForbidden with default headers values
func NewAppendForgeToBuildForbidden() *AppendForgeToBuildForbidden {

	return &AppendForgeToBuildForbidden{}
}

// WithPayload adds the payload to the append forge to build forbidden response
func (o *AppendForgeToBuildForbidden) WithPayload(payload *models.GeneralError) *AppendForgeToBuildForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append forge to build forbidden response
func (o *AppendForgeToBuildForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendForgeToBuildForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendForgeToBuildPreconditionFailedCode is the HTTP code returned for type AppendForgeToBuildPreconditionFailed
const AppendForgeToBuildPreconditionFailedCode int = 412

/*AppendForgeToBuildPreconditionFailed Failed to parse request body

swagger:response appendForgeToBuildPreconditionFailed
*/
type AppendForgeToBuildPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendForgeToBuildPreconditionFailed creates AppendForgeToBuildPreconditionFailed with default headers values
func NewAppendForgeToBuildPreconditionFailed() *AppendForgeToBuildPreconditionFailed {

	return &AppendForgeToBuildPreconditionFailed{}
}

// WithPayload adds the payload to the append forge to build precondition failed response
func (o *AppendForgeToBuildPreconditionFailed) WithPayload(payload *models.GeneralError) *AppendForgeToBuildPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append forge to build precondition failed response
func (o *AppendForgeToBuildPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendForgeToBuildPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppendForgeToBuildUnprocessableEntityCode is the HTTP code returned for type AppendForgeToBuildUnprocessableEntity
const AppendForgeToBuildUnprocessableEntityCode int = 422

/*AppendForgeToBuildUnprocessableEntity Build is already appended

swagger:response appendForgeToBuildUnprocessableEntity
*/
type AppendForgeToBuildUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewAppendForgeToBuildUnprocessableEntity creates AppendForgeToBuildUnprocessableEntity with default headers values
func NewAppendForgeToBuildUnprocessableEntity() *AppendForgeToBuildUnprocessableEntity {

	return &AppendForgeToBuildUnprocessableEntity{}
}

// WithPayload adds the payload to the append forge to build unprocessable entity response
func (o *AppendForgeToBuildUnprocessableEntity) WithPayload(payload *models.ValidationError) *AppendForgeToBuildUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append forge to build unprocessable entity response
func (o *AppendForgeToBuildUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendForgeToBuildUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AppendForgeToBuildDefault Some error unrelated to the handler

swagger:response appendForgeToBuildDefault
*/
type AppendForgeToBuildDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewAppendForgeToBuildDefault creates AppendForgeToBuildDefault with default headers values
func NewAppendForgeToBuildDefault(code int) *AppendForgeToBuildDefault {
	if code <= 0 {
		code = 500
	}

	return &AppendForgeToBuildDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the append forge to build default response
func (o *AppendForgeToBuildDefault) WithStatusCode(code int) *AppendForgeToBuildDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the append forge to build default response
func (o *AppendForgeToBuildDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the append forge to build default response
func (o *AppendForgeToBuildDefault) WithPayload(payload *models.GeneralError) *AppendForgeToBuildDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the append forge to build default response
func (o *AppendForgeToBuildDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppendForgeToBuildDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
