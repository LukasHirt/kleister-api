// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ForgeUpdateOKCode is the HTTP code returned for type ForgeUpdateOK
const ForgeUpdateOKCode int = 200

/*ForgeUpdateOK Plain success message

swagger:response forgeUpdateOK
*/
type ForgeUpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeUpdateOK creates ForgeUpdateOK with default headers values
func NewForgeUpdateOK() *ForgeUpdateOK {

	return &ForgeUpdateOK{}
}

// WithPayload adds the payload to the forge update o k response
func (o *ForgeUpdateOK) WithPayload(payload *models.GeneralError) *ForgeUpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge update o k response
func (o *ForgeUpdateOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ForgeUpdateForbiddenCode is the HTTP code returned for type ForgeUpdateForbidden
const ForgeUpdateForbiddenCode int = 403

/*ForgeUpdateForbidden User is not authorized

swagger:response forgeUpdateForbidden
*/
type ForgeUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeUpdateForbidden creates ForgeUpdateForbidden with default headers values
func NewForgeUpdateForbidden() *ForgeUpdateForbidden {

	return &ForgeUpdateForbidden{}
}

// WithPayload adds the payload to the forge update forbidden response
func (o *ForgeUpdateForbidden) WithPayload(payload *models.GeneralError) *ForgeUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge update forbidden response
func (o *ForgeUpdateForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ForgeUpdateServiceUnavailableCode is the HTTP code returned for type ForgeUpdateServiceUnavailable
const ForgeUpdateServiceUnavailableCode int = 503

/*ForgeUpdateServiceUnavailable If remote source is not available

swagger:response forgeUpdateServiceUnavailable
*/
type ForgeUpdateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeUpdateServiceUnavailable creates ForgeUpdateServiceUnavailable with default headers values
func NewForgeUpdateServiceUnavailable() *ForgeUpdateServiceUnavailable {

	return &ForgeUpdateServiceUnavailable{}
}

// WithPayload adds the payload to the forge update service unavailable response
func (o *ForgeUpdateServiceUnavailable) WithPayload(payload *models.GeneralError) *ForgeUpdateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge update service unavailable response
func (o *ForgeUpdateServiceUnavailable) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeUpdateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ForgeUpdateDefault Some error unrelated to the handler

swagger:response forgeUpdateDefault
*/
type ForgeUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeUpdateDefault creates ForgeUpdateDefault with default headers values
func NewForgeUpdateDefault(code int) *ForgeUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &ForgeUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the forge update default response
func (o *ForgeUpdateDefault) WithStatusCode(code int) *ForgeUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the forge update default response
func (o *ForgeUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the forge update default response
func (o *ForgeUpdateDefault) WithPayload(payload *models.GeneralError) *ForgeUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge update default response
func (o *ForgeUpdateDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
