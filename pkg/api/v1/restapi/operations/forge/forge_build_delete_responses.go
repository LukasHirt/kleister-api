// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ForgeBuildDeleteOKCode is the HTTP code returned for type ForgeBuildDeleteOK
const ForgeBuildDeleteOKCode int = 200

/*ForgeBuildDeleteOK A collection of assigned builds

swagger:response forgeBuildDeleteOK
*/
type ForgeBuildDeleteOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Build `json:"body,omitempty"`
}

// NewForgeBuildDeleteOK creates ForgeBuildDeleteOK with default headers values
func NewForgeBuildDeleteOK() *ForgeBuildDeleteOK {

	return &ForgeBuildDeleteOK{}
}

// WithPayload adds the payload to the forge build delete o k response
func (o *ForgeBuildDeleteOK) WithPayload(payload []*models.Build) *ForgeBuildDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge build delete o k response
func (o *ForgeBuildDeleteOK) SetPayload(payload []*models.Build) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeBuildDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Build, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ForgeBuildDeleteForbiddenCode is the HTTP code returned for type ForgeBuildDeleteForbidden
const ForgeBuildDeleteForbiddenCode int = 403

/*ForgeBuildDeleteForbidden User is not authorized

swagger:response forgeBuildDeleteForbidden
*/
type ForgeBuildDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeBuildDeleteForbidden creates ForgeBuildDeleteForbidden with default headers values
func NewForgeBuildDeleteForbidden() *ForgeBuildDeleteForbidden {

	return &ForgeBuildDeleteForbidden{}
}

// WithPayload adds the payload to the forge build delete forbidden response
func (o *ForgeBuildDeleteForbidden) WithPayload(payload *models.GeneralError) *ForgeBuildDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge build delete forbidden response
func (o *ForgeBuildDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeBuildDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ForgeBuildDeletePreconditionFailedCode is the HTTP code returned for type ForgeBuildDeletePreconditionFailed
const ForgeBuildDeletePreconditionFailedCode int = 412

/*ForgeBuildDeletePreconditionFailed Failed to parse request body

swagger:response forgeBuildDeletePreconditionFailed
*/
type ForgeBuildDeletePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeBuildDeletePreconditionFailed creates ForgeBuildDeletePreconditionFailed with default headers values
func NewForgeBuildDeletePreconditionFailed() *ForgeBuildDeletePreconditionFailed {

	return &ForgeBuildDeletePreconditionFailed{}
}

// WithPayload adds the payload to the forge build delete precondition failed response
func (o *ForgeBuildDeletePreconditionFailed) WithPayload(payload *models.GeneralError) *ForgeBuildDeletePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge build delete precondition failed response
func (o *ForgeBuildDeletePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeBuildDeletePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ForgeBuildDeleteUnprocessableEntityCode is the HTTP code returned for type ForgeBuildDeleteUnprocessableEntity
const ForgeBuildDeleteUnprocessableEntityCode int = 422

/*ForgeBuildDeleteUnprocessableEntity Build is not assigned

swagger:response forgeBuildDeleteUnprocessableEntity
*/
type ForgeBuildDeleteUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewForgeBuildDeleteUnprocessableEntity creates ForgeBuildDeleteUnprocessableEntity with default headers values
func NewForgeBuildDeleteUnprocessableEntity() *ForgeBuildDeleteUnprocessableEntity {

	return &ForgeBuildDeleteUnprocessableEntity{}
}

// WithPayload adds the payload to the forge build delete unprocessable entity response
func (o *ForgeBuildDeleteUnprocessableEntity) WithPayload(payload *models.ValidationError) *ForgeBuildDeleteUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge build delete unprocessable entity response
func (o *ForgeBuildDeleteUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeBuildDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ForgeBuildDeleteDefault Some error unrelated to the handler

swagger:response forgeBuildDeleteDefault
*/
type ForgeBuildDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewForgeBuildDeleteDefault creates ForgeBuildDeleteDefault with default headers values
func NewForgeBuildDeleteDefault(code int) *ForgeBuildDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &ForgeBuildDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the forge build delete default response
func (o *ForgeBuildDeleteDefault) WithStatusCode(code int) *ForgeBuildDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the forge build delete default response
func (o *ForgeBuildDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the forge build delete default response
func (o *ForgeBuildDeleteDefault) WithPayload(payload *models.GeneralError) *ForgeBuildDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forge build delete default response
func (o *ForgeBuildDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForgeBuildDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
