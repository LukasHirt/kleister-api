// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kleister/kleister-api/pkg/api/v1/models"
)

// ListForgesOKCode is the HTTP code returned for type ListForgesOK
const ListForgesOKCode int = 200

/*ListForgesOK A collection of Forge versions

swagger:response listForgesOK
*/
type ListForgesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Forge `json:"body,omitempty"`
}

// NewListForgesOK creates ListForgesOK with default headers values
func NewListForgesOK() *ListForgesOK {

	return &ListForgesOK{}
}

// WithPayload adds the payload to the list forges o k response
func (o *ListForgesOK) WithPayload(payload []*models.Forge) *ListForgesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list forges o k response
func (o *ListForgesOK) SetPayload(payload []*models.Forge) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListForgesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Forge, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListForgesForbiddenCode is the HTTP code returned for type ListForgesForbidden
const ListForgesForbiddenCode int = 403

/*ListForgesForbidden User is not authorized

swagger:response listForgesForbidden
*/
type ListForgesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewListForgesForbidden creates ListForgesForbidden with default headers values
func NewListForgesForbidden() *ListForgesForbidden {

	return &ListForgesForbidden{}
}

// WithPayload adds the payload to the list forges forbidden response
func (o *ListForgesForbidden) WithPayload(payload *models.GeneralError) *ListForgesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list forges forbidden response
func (o *ListForgesForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListForgesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ListForgesDefault Some error unrelated to the handler

swagger:response listForgesDefault
*/
type ListForgesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewListForgesDefault creates ListForgesDefault with default headers values
func NewListForgesDefault(code int) *ListForgesDefault {
	if code <= 0 {
		code = 500
	}

	return &ListForgesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list forges default response
func (o *ListForgesDefault) WithStatusCode(code int) *ListForgesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list forges default response
func (o *ListForgesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list forges default response
func (o *ListForgesDefault) WithPayload(payload *models.GeneralError) *ListForgesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list forges default response
func (o *ListForgesDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListForgesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
