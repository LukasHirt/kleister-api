// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeleteTeamFromPackOKCode is the HTTP code returned for type DeleteTeamFromPackOK
const DeleteTeamFromPackOKCode int = 200

/*DeleteTeamFromPackOK Plain success message

swagger:response deleteTeamFromPackOK
*/
type DeleteTeamFromPackOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromPackOK creates DeleteTeamFromPackOK with default headers values
func NewDeleteTeamFromPackOK() *DeleteTeamFromPackOK {

	return &DeleteTeamFromPackOK{}
}

// WithPayload adds the payload to the delete team from pack o k response
func (o *DeleteTeamFromPackOK) WithPayload(payload *models.GeneralError) *DeleteTeamFromPackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from pack o k response
func (o *DeleteTeamFromPackOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromPackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromPackForbiddenCode is the HTTP code returned for type DeleteTeamFromPackForbidden
const DeleteTeamFromPackForbiddenCode int = 403

/*DeleteTeamFromPackForbidden User is not authorized

swagger:response deleteTeamFromPackForbidden
*/
type DeleteTeamFromPackForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromPackForbidden creates DeleteTeamFromPackForbidden with default headers values
func NewDeleteTeamFromPackForbidden() *DeleteTeamFromPackForbidden {

	return &DeleteTeamFromPackForbidden{}
}

// WithPayload adds the payload to the delete team from pack forbidden response
func (o *DeleteTeamFromPackForbidden) WithPayload(payload *models.GeneralError) *DeleteTeamFromPackForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from pack forbidden response
func (o *DeleteTeamFromPackForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromPackForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromPackPreconditionFailedCode is the HTTP code returned for type DeleteTeamFromPackPreconditionFailed
const DeleteTeamFromPackPreconditionFailedCode int = 412

/*DeleteTeamFromPackPreconditionFailed Failed to parse request body

swagger:response deleteTeamFromPackPreconditionFailed
*/
type DeleteTeamFromPackPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromPackPreconditionFailed creates DeleteTeamFromPackPreconditionFailed with default headers values
func NewDeleteTeamFromPackPreconditionFailed() *DeleteTeamFromPackPreconditionFailed {

	return &DeleteTeamFromPackPreconditionFailed{}
}

// WithPayload adds the payload to the delete team from pack precondition failed response
func (o *DeleteTeamFromPackPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteTeamFromPackPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from pack precondition failed response
func (o *DeleteTeamFromPackPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromPackPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromPackUnprocessableEntityCode is the HTTP code returned for type DeleteTeamFromPackUnprocessableEntity
const DeleteTeamFromPackUnprocessableEntityCode int = 422

/*DeleteTeamFromPackUnprocessableEntity Pack is not assigned

swagger:response deleteTeamFromPackUnprocessableEntity
*/
type DeleteTeamFromPackUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromPackUnprocessableEntity creates DeleteTeamFromPackUnprocessableEntity with default headers values
func NewDeleteTeamFromPackUnprocessableEntity() *DeleteTeamFromPackUnprocessableEntity {

	return &DeleteTeamFromPackUnprocessableEntity{}
}

// WithPayload adds the payload to the delete team from pack unprocessable entity response
func (o *DeleteTeamFromPackUnprocessableEntity) WithPayload(payload *models.GeneralError) *DeleteTeamFromPackUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from pack unprocessable entity response
func (o *DeleteTeamFromPackUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromPackUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteTeamFromPackDefault Some error unrelated to the handler

swagger:response deleteTeamFromPackDefault
*/
type DeleteTeamFromPackDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromPackDefault creates DeleteTeamFromPackDefault with default headers values
func NewDeleteTeamFromPackDefault(code int) *DeleteTeamFromPackDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTeamFromPackDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete team from pack default response
func (o *DeleteTeamFromPackDefault) WithStatusCode(code int) *DeleteTeamFromPackDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete team from pack default response
func (o *DeleteTeamFromPackDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete team from pack default response
func (o *DeleteTeamFromPackDefault) WithPayload(payload *models.GeneralError) *DeleteTeamFromPackDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from pack default response
func (o *DeleteTeamFromPackDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromPackDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
