// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// DeleteTeamFromModOKCode is the HTTP code returned for type DeleteTeamFromModOK
const DeleteTeamFromModOKCode int = 200

/*DeleteTeamFromModOK Plain success message

swagger:response deleteTeamFromModOK
*/
type DeleteTeamFromModOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromModOK creates DeleteTeamFromModOK with default headers values
func NewDeleteTeamFromModOK() *DeleteTeamFromModOK {

	return &DeleteTeamFromModOK{}
}

// WithPayload adds the payload to the delete team from mod o k response
func (o *DeleteTeamFromModOK) WithPayload(payload *models.GeneralError) *DeleteTeamFromModOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from mod o k response
func (o *DeleteTeamFromModOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromModOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromModForbiddenCode is the HTTP code returned for type DeleteTeamFromModForbidden
const DeleteTeamFromModForbiddenCode int = 403

/*DeleteTeamFromModForbidden User is not authorized

swagger:response deleteTeamFromModForbidden
*/
type DeleteTeamFromModForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromModForbidden creates DeleteTeamFromModForbidden with default headers values
func NewDeleteTeamFromModForbidden() *DeleteTeamFromModForbidden {

	return &DeleteTeamFromModForbidden{}
}

// WithPayload adds the payload to the delete team from mod forbidden response
func (o *DeleteTeamFromModForbidden) WithPayload(payload *models.GeneralError) *DeleteTeamFromModForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from mod forbidden response
func (o *DeleteTeamFromModForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromModForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromModPreconditionFailedCode is the HTTP code returned for type DeleteTeamFromModPreconditionFailed
const DeleteTeamFromModPreconditionFailedCode int = 412

/*DeleteTeamFromModPreconditionFailed Failed to parse request body

swagger:response deleteTeamFromModPreconditionFailed
*/
type DeleteTeamFromModPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromModPreconditionFailed creates DeleteTeamFromModPreconditionFailed with default headers values
func NewDeleteTeamFromModPreconditionFailed() *DeleteTeamFromModPreconditionFailed {

	return &DeleteTeamFromModPreconditionFailed{}
}

// WithPayload adds the payload to the delete team from mod precondition failed response
func (o *DeleteTeamFromModPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteTeamFromModPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from mod precondition failed response
func (o *DeleteTeamFromModPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromModPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromModUnprocessableEntityCode is the HTTP code returned for type DeleteTeamFromModUnprocessableEntity
const DeleteTeamFromModUnprocessableEntityCode int = 422

/*DeleteTeamFromModUnprocessableEntity Mod is not assigned

swagger:response deleteTeamFromModUnprocessableEntity
*/
type DeleteTeamFromModUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromModUnprocessableEntity creates DeleteTeamFromModUnprocessableEntity with default headers values
func NewDeleteTeamFromModUnprocessableEntity() *DeleteTeamFromModUnprocessableEntity {

	return &DeleteTeamFromModUnprocessableEntity{}
}

// WithPayload adds the payload to the delete team from mod unprocessable entity response
func (o *DeleteTeamFromModUnprocessableEntity) WithPayload(payload *models.GeneralError) *DeleteTeamFromModUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from mod unprocessable entity response
func (o *DeleteTeamFromModUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromModUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteTeamFromModDefault Some error unrelated to the handler

swagger:response deleteTeamFromModDefault
*/
type DeleteTeamFromModDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromModDefault creates DeleteTeamFromModDefault with default headers values
func NewDeleteTeamFromModDefault(code int) *DeleteTeamFromModDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTeamFromModDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete team from mod default response
func (o *DeleteTeamFromModDefault) WithStatusCode(code int) *DeleteTeamFromModDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete team from mod default response
func (o *DeleteTeamFromModDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete team from mod default response
func (o *DeleteTeamFromModDefault) WithPayload(payload *models.GeneralError) *DeleteTeamFromModDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from mod default response
func (o *DeleteTeamFromModDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromModDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
