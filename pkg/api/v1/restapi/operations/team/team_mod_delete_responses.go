// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// TeamModDeleteOKCode is the HTTP code returned for type TeamModDeleteOK
const TeamModDeleteOKCode int = 200

/*TeamModDeleteOK Plain success message

swagger:response teamModDeleteOK
*/
type TeamModDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamModDeleteOK creates TeamModDeleteOK with default headers values
func NewTeamModDeleteOK() *TeamModDeleteOK {

	return &TeamModDeleteOK{}
}

// WithPayload adds the payload to the team mod delete o k response
func (o *TeamModDeleteOK) WithPayload(payload *models.GeneralError) *TeamModDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team mod delete o k response
func (o *TeamModDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamModDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamModDeleteForbiddenCode is the HTTP code returned for type TeamModDeleteForbidden
const TeamModDeleteForbiddenCode int = 403

/*TeamModDeleteForbidden User is not authorized

swagger:response teamModDeleteForbidden
*/
type TeamModDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamModDeleteForbidden creates TeamModDeleteForbidden with default headers values
func NewTeamModDeleteForbidden() *TeamModDeleteForbidden {

	return &TeamModDeleteForbidden{}
}

// WithPayload adds the payload to the team mod delete forbidden response
func (o *TeamModDeleteForbidden) WithPayload(payload *models.GeneralError) *TeamModDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team mod delete forbidden response
func (o *TeamModDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamModDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamModDeletePreconditionFailedCode is the HTTP code returned for type TeamModDeletePreconditionFailed
const TeamModDeletePreconditionFailedCode int = 412

/*TeamModDeletePreconditionFailed Failed to parse request body

swagger:response teamModDeletePreconditionFailed
*/
type TeamModDeletePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamModDeletePreconditionFailed creates TeamModDeletePreconditionFailed with default headers values
func NewTeamModDeletePreconditionFailed() *TeamModDeletePreconditionFailed {

	return &TeamModDeletePreconditionFailed{}
}

// WithPayload adds the payload to the team mod delete precondition failed response
func (o *TeamModDeletePreconditionFailed) WithPayload(payload *models.GeneralError) *TeamModDeletePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team mod delete precondition failed response
func (o *TeamModDeletePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamModDeletePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamModDeleteUnprocessableEntityCode is the HTTP code returned for type TeamModDeleteUnprocessableEntity
const TeamModDeleteUnprocessableEntityCode int = 422

/*TeamModDeleteUnprocessableEntity Mod is not assigned

swagger:response teamModDeleteUnprocessableEntity
*/
type TeamModDeleteUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamModDeleteUnprocessableEntity creates TeamModDeleteUnprocessableEntity with default headers values
func NewTeamModDeleteUnprocessableEntity() *TeamModDeleteUnprocessableEntity {

	return &TeamModDeleteUnprocessableEntity{}
}

// WithPayload adds the payload to the team mod delete unprocessable entity response
func (o *TeamModDeleteUnprocessableEntity) WithPayload(payload *models.GeneralError) *TeamModDeleteUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team mod delete unprocessable entity response
func (o *TeamModDeleteUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamModDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TeamModDeleteDefault Some error unrelated to the handler

swagger:response teamModDeleteDefault
*/
type TeamModDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamModDeleteDefault creates TeamModDeleteDefault with default headers values
func NewTeamModDeleteDefault(code int) *TeamModDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &TeamModDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the team mod delete default response
func (o *TeamModDeleteDefault) WithStatusCode(code int) *TeamModDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the team mod delete default response
func (o *TeamModDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the team mod delete default response
func (o *TeamModDeleteDefault) WithPayload(payload *models.GeneralError) *TeamModDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team mod delete default response
func (o *TeamModDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamModDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
