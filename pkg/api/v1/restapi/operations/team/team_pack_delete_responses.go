// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// TeamPackDeleteOKCode is the HTTP code returned for type TeamPackDeleteOK
const TeamPackDeleteOKCode int = 200

/*TeamPackDeleteOK Plain success message

swagger:response teamPackDeleteOK
*/
type TeamPackDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackDeleteOK creates TeamPackDeleteOK with default headers values
func NewTeamPackDeleteOK() *TeamPackDeleteOK {

	return &TeamPackDeleteOK{}
}

// WithPayload adds the payload to the team pack delete o k response
func (o *TeamPackDeleteOK) WithPayload(payload *models.GeneralError) *TeamPackDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack delete o k response
func (o *TeamPackDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackDeleteForbiddenCode is the HTTP code returned for type TeamPackDeleteForbidden
const TeamPackDeleteForbiddenCode int = 403

/*TeamPackDeleteForbidden User is not authorized

swagger:response teamPackDeleteForbidden
*/
type TeamPackDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackDeleteForbidden creates TeamPackDeleteForbidden with default headers values
func NewTeamPackDeleteForbidden() *TeamPackDeleteForbidden {

	return &TeamPackDeleteForbidden{}
}

// WithPayload adds the payload to the team pack delete forbidden response
func (o *TeamPackDeleteForbidden) WithPayload(payload *models.GeneralError) *TeamPackDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack delete forbidden response
func (o *TeamPackDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackDeletePreconditionFailedCode is the HTTP code returned for type TeamPackDeletePreconditionFailed
const TeamPackDeletePreconditionFailedCode int = 412

/*TeamPackDeletePreconditionFailed Failed to parse request body

swagger:response teamPackDeletePreconditionFailed
*/
type TeamPackDeletePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackDeletePreconditionFailed creates TeamPackDeletePreconditionFailed with default headers values
func NewTeamPackDeletePreconditionFailed() *TeamPackDeletePreconditionFailed {

	return &TeamPackDeletePreconditionFailed{}
}

// WithPayload adds the payload to the team pack delete precondition failed response
func (o *TeamPackDeletePreconditionFailed) WithPayload(payload *models.GeneralError) *TeamPackDeletePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack delete precondition failed response
func (o *TeamPackDeletePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackDeletePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackDeleteUnprocessableEntityCode is the HTTP code returned for type TeamPackDeleteUnprocessableEntity
const TeamPackDeleteUnprocessableEntityCode int = 422

/*TeamPackDeleteUnprocessableEntity Pack is not assigned

swagger:response teamPackDeleteUnprocessableEntity
*/
type TeamPackDeleteUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackDeleteUnprocessableEntity creates TeamPackDeleteUnprocessableEntity with default headers values
func NewTeamPackDeleteUnprocessableEntity() *TeamPackDeleteUnprocessableEntity {

	return &TeamPackDeleteUnprocessableEntity{}
}

// WithPayload adds the payload to the team pack delete unprocessable entity response
func (o *TeamPackDeleteUnprocessableEntity) WithPayload(payload *models.GeneralError) *TeamPackDeleteUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack delete unprocessable entity response
func (o *TeamPackDeleteUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackDeleteUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TeamPackDeleteDefault Some error unrelated to the handler

swagger:response teamPackDeleteDefault
*/
type TeamPackDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackDeleteDefault creates TeamPackDeleteDefault with default headers values
func NewTeamPackDeleteDefault(code int) *TeamPackDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &TeamPackDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the team pack delete default response
func (o *TeamPackDeleteDefault) WithStatusCode(code int) *TeamPackDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the team pack delete default response
func (o *TeamPackDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the team pack delete default response
func (o *TeamPackDeleteDefault) WithPayload(payload *models.GeneralError) *TeamPackDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack delete default response
func (o *TeamPackDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
