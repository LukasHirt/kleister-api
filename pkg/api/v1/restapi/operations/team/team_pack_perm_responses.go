// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kleister/kleister-api/pkg/api/v1/models"
)

// TeamPackPermOKCode is the HTTP code returned for type TeamPackPermOK
const TeamPackPermOKCode int = 200

/*TeamPackPermOK Plain success message

swagger:response teamPackPermOK
*/
type TeamPackPermOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackPermOK creates TeamPackPermOK with default headers values
func NewTeamPackPermOK() *TeamPackPermOK {

	return &TeamPackPermOK{}
}

// WithPayload adds the payload to the team pack perm o k response
func (o *TeamPackPermOK) WithPayload(payload *models.GeneralError) *TeamPackPermOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack perm o k response
func (o *TeamPackPermOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackPermOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackPermForbiddenCode is the HTTP code returned for type TeamPackPermForbidden
const TeamPackPermForbiddenCode int = 403

/*TeamPackPermForbidden User is not authorized

swagger:response teamPackPermForbidden
*/
type TeamPackPermForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackPermForbidden creates TeamPackPermForbidden with default headers values
func NewTeamPackPermForbidden() *TeamPackPermForbidden {

	return &TeamPackPermForbidden{}
}

// WithPayload adds the payload to the team pack perm forbidden response
func (o *TeamPackPermForbidden) WithPayload(payload *models.GeneralError) *TeamPackPermForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack perm forbidden response
func (o *TeamPackPermForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackPermForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackPermPreconditionFailedCode is the HTTP code returned for type TeamPackPermPreconditionFailed
const TeamPackPermPreconditionFailedCode int = 412

/*TeamPackPermPreconditionFailed Failed to parse request body

swagger:response teamPackPermPreconditionFailed
*/
type TeamPackPermPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackPermPreconditionFailed creates TeamPackPermPreconditionFailed with default headers values
func NewTeamPackPermPreconditionFailed() *TeamPackPermPreconditionFailed {

	return &TeamPackPermPreconditionFailed{}
}

// WithPayload adds the payload to the team pack perm precondition failed response
func (o *TeamPackPermPreconditionFailed) WithPayload(payload *models.GeneralError) *TeamPackPermPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack perm precondition failed response
func (o *TeamPackPermPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackPermPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TeamPackPermUnprocessableEntityCode is the HTTP code returned for type TeamPackPermUnprocessableEntity
const TeamPackPermUnprocessableEntityCode int = 422

/*TeamPackPermUnprocessableEntity Pack is not assigned

swagger:response teamPackPermUnprocessableEntity
*/
type TeamPackPermUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackPermUnprocessableEntity creates TeamPackPermUnprocessableEntity with default headers values
func NewTeamPackPermUnprocessableEntity() *TeamPackPermUnprocessableEntity {

	return &TeamPackPermUnprocessableEntity{}
}

// WithPayload adds the payload to the team pack perm unprocessable entity response
func (o *TeamPackPermUnprocessableEntity) WithPayload(payload *models.GeneralError) *TeamPackPermUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack perm unprocessable entity response
func (o *TeamPackPermUnprocessableEntity) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackPermUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TeamPackPermDefault Some error unrelated to the handler

swagger:response teamPackPermDefault
*/
type TeamPackPermDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewTeamPackPermDefault creates TeamPackPermDefault with default headers values
func NewTeamPackPermDefault(code int) *TeamPackPermDefault {
	if code <= 0 {
		code = 500
	}

	return &TeamPackPermDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the team pack perm default response
func (o *TeamPackPermDefault) WithStatusCode(code int) *TeamPackPermDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the team pack perm default response
func (o *TeamPackPermDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the team pack perm default response
func (o *TeamPackPermDefault) WithPayload(payload *models.GeneralError) *TeamPackPermDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the team pack perm default response
func (o *TeamPackPermDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TeamPackPermDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
